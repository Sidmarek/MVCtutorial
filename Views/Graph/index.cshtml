
@Html.Partial("~/Views/Menu/_Menu.cshtml")

<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <link href="./css/style_01.css" rel="stylesheet" type="text/css" />
    <!--
    <script type="application/json" crc="config.json">
    </script>
    -->
    <script language="javascript" type="text/javascript">

    // glob�ln� konstanty

    // glob�ln� prom�nn�
    var fontFamily = "Tahoma",
        d = new Date();

    // layout
    var cOff = 0.5,
        posX = cOff,
        posY = cOff,
        fieldBrake = 5,
        fieldTopAdjust = 50,
        fieldBottomAdjust = 50,
        fieldLeftAdjust = 40,
        fieldRightAdjust = 20,
        fieldValWidth = 300,
        fieldBreakVals = 15,
        poleBegtimeOdsazY = 30,
        titleBarHeight = 20,
        iBtnHeight = 20,
        canvasOffsetLeft,
        canvasOffsetTop,
        //nacteno pri inicializaci
        iWidth,
        iHeight,
        chartWidth,
        chartHeight;

    // pole konstant - kroky m��ky,d�lka osy
    var stepGridY = [1,2,5,10,20,50,100,200,500,1000,2000,5000,10000],
        stepGridTime =[5,10,20,30,60,60,120,240,1440,2880],
        timeAxisLength = [0.5,1,2,4,8,12,24,48,168,336],

        monthsEN = ["January","February","March","April","May","June","July","August","September","October","November","December"],
        monthsCZ = ["Leden","�nor","B�ezen","Duben","Kv�ten","�erven","�ervenec","Srpen","Z���","��jen","Listopad","Prosinec"],
        monthsDE = ["Januar","Februar","M�rz","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],

        daysEN0 = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],
        daysCZ0 = ["Ne","Po","�t","St","�t","P�","So"],
        daysDE0 = ["So","Mo","Di","Mi","Do","Fr","Sa"],

        daysEN1 = ["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],
        daysCZ1 = ["Po","�t","St","�t","P�","So","Ne"],
        daysDE1 = ["Mo","Di","Mi","Do","Fr","Sa","So"];

    // limity
    var MAX_VIEWS = 30,
        MAX_FIELDS = 9,
        MAX_SIGNALS = 16,
        MAX_MULTITEXTS = 19,
        MAX_HORIZ_LINE = 5,
        MAX_CLICKMAPS = 35;

    // menu
    var factory,
        view,
        utcBias = 0,
        lang = 0,
        enbLangs = [],
        timeAxisIdx = 7,
        beginTime,
        markerTime;

    // fonty
    var fontTitle = 'bold 12px MS Sans Serif',
        fontLegend = 'normal 11px MS Sans Serif',
        fontVals = 'bold 12px MS Sans Serif',
        fontAxis = 'normal 10px MS Sans Serif';

    // barvy
    var colorWarning = '#FF0000',
        colorView = '#F0F0F0',
        colorBackFields = '#000000',
        colorGrid = '#404040',
        colorTitle = '#000000',
        colorBackTime = '#000000',
        colorTime = '#FFFFFF',
        colorFrames = '#000000';
        BLACK = '#000000';
        WHITE = '#FFFFFF';

    var clickMaps;

    // config
    var multitexts = {1: {"name": [""],"strings": []},
                      2: {"name": [""],"strings": []},
                      3: {"name": [""],"strings": []},
                      4: {"name": [""],"strings": []},
                      5: {"name": [""],"strings": []},
                      6: {"name": [""],"strings": []},
                      7: {"name": [""],"strings": []},
                      8: {"name": [""],"strings": []},
                      9: {"name": [""],"strings": []},
                      10: {"name": [""],"strings": []},
                      11: {"name": [""],"strings": []},
                      12: {"name": [""],"strings": []},
                      13: {"name": [""],"strings": []},
                      14: {"name": [""],"strings": []},
                      15: {"name": [""],"strings": []},
                      16: {"name": [""],"strings": []},
                      17: {"name": [""],"strings": []},
                      18: {"name": [""],"strings": []},
                      19: {"name": [""],"strings": []}
                     };

    var titles = new Array();

    var views = {1: {"field_ratio": [],"field_range": [],"signals": []},
                 2: {"field_ratio": [],"field_range": [],"signals": []},
                 3: {"field_ratio": [],"field_range": [],"signals": []},
                 4: {"field_ratio": [],"field_range": [],"signals": []},
                 5: {"field_ratio": [],"field_range": [],"signals": []},
                 6: {"field_ratio": [],"field_range": [],"signals": []},
                 7: {"field_ratio": [],"field_range": [],"signals": []},
                 8: {"field_ratio": [],"field_range": [],"signals": []},
                 9: {"field_ratio": [],"field_range": [],"signals": []},
                 10: {"field_ratio": [],"field_range": [],"signals": []},
                 11: {"field_ratio": [],"field_range": [],"signals": []},
                 12: {"field_ratio": [],"field_range": [],"signals": []},
                 13: {"field_ratio": [],"field_range": [],"signals": []},
                 14: {"field_ratio": [],"field_range": [],"signals": []},
                 15: {"field_ratio": [],"field_range": [],"signals": []},
                 16: {"field_ratio": [],"field_range": [],"signals": []},
                 17: {"field_ratio": [],"field_range": [],"signals": []},
                 18: {"field_ratio": [],"field_range": [],"signals": []},
                 19: {"field_ratio": [],"field_range": [],"signals": []},
                 20: {"field_ratio": [],"field_range": [],"signals": []},
                 21: {"field_ratio": [],"field_range": [],"signals": []},
                 22: {"field_ratio": [],"field_range": [],"signals": []},
                 23: {"field_ratio": [],"field_range": [],"signals": []},
                 24: {"field_ratio": [],"field_range": [],"signals": []},
                 25: {"field_ratio": [],"field_range": [],"signals": []},
                 26: {"field_ratio": [],"field_range": [],"signals": []},
                 27: {"field_ratio": [],"field_range": [],"signals": []},
                 28: {"field_ratio": [],"field_range": [],"signals": []},
                 29: {"field_ratio": [],"field_range": [],"signals": []},
                 30: {"field_ratio": [],"field_range": [],"signals": []}
                };

    // pouze pro lad�n� (pozd�ji p�ijde ze serveru)
    //config = [{"type": "multitext","name": "PF_Step","strings": ["step0$krok0$Schritt0","step1$krok1$Schritt1","step2$krok2$Schritt2","step3$krok3$Schritt3","step4$krok4$Schritt4"]},{"type": "multitext","name": "PF_Status","strings": ["off$klid$Stille","running$b��$Lauf","interrupted$p�eru�eno$unterbrochen","skipped$p�esko�eno$�bersprungen","vaiting$�ek�$Warten","done$hotovo$Fertig"]},{"type": "title","strings": ["","Overview$P�ehled$�bersicht","PF1 - operation$PF1 - operace$PF1 - Betrieb"]},{"type": "view","view": 1,"field": 1,"ratio": 3,"range": 2200,"signals": ["n.CZJHR.arBF_norm.iPF1_Weight.1.#FFFF00.PF1 - weight$PF1 - hmotnost$PF1 - Gewicht.kg$kg$kg","n.CZJHR.arBF_norm.diPF2_Weight.1.#00FF00.PF2 - weight$PF2 - hmotnost$PF2 - Gewicht.kg$kg$kg"]},{"type": "view","view": 1,"field": 2,"ratio": 2,"range":   10,"signals": ["s.CZJHR.arBF_norm.iPF1_Step.0.#FFFF00.PF1 - step$PF1 - krok$PF1 - Schritt.PF_Step","s.CZJHR.arBF_norm.iPF2_Step.0.#00FF00.PF2 - step$PF2 - krok$PF2-Schritt.PF_Step"]},{"type": "view","view": 1,"field": 3,"ratio": 3,"range":   50,"signals": ["n.CZJHR.arBF_norm.iPF1_Temp.1.#FFFF00.PF1 - temperature$PF1 - teplota$PF1 - Temperatur.�C$�C$�C","n.CZJHR.arBF_norm.diPF2_Temp.1.#00FF00.PF2 - temperature$PF2 - teplota$PF2 - Temperatur.�C$�C$�C"]},{"type": "view","view": 1,"field": 4,"ratio": 2,"range":   72,"signals": ["n.CZJHR.arBF_norm.iPF1_Age.1.#FFFF00.PF1 - age$PF1 - st���$PF1 - Alter.hrs$hod$Std","n.CZJHR.arBF_norm.iPF2_DoughTime.1.#00FF00.PF2 - age$PF2 - st���$PF2 - Alter.hrs$hod$Std"]},{"type": "view","view": 2,"field": 1,"ratio": 1,"range": 10,"signals": ["n.CZJHR.arBF_norm.iPF1_Status.1.#FFFF00.PF1 - status$PF1 - stav$PF1 - Status.PF_Status","n.CZJHR.arBF_norm.iPF2_Status.1.#00FF00.PF2 - status$PF2 - stav$PF2 - Status.PF_Status"]}];
    //config = [{"type": "multitext","name": "PF_Step","strings": ["step0$krok0$Schritt0","step1$krok1$Schritt1","step2$krok2$Schritt2","step3$krok3$Schritt3","step4$krok4$Schritt4"]},{"type": "multitext", "name": "PF_Status", "strings": ["off$klid$Stille","running$b��$Lauf","interrupted$p�eru�eno$unterbrochen","skipped$p�esko�eno$�bersprungen","vaiting$�ek�$Warten","done$hotovo$Fertig"]},{"type": "title", "strings": ["","Overview$P�ehled$�bersicht","PF1 - operation$PF1 - operace$PF1 - Betrieb"]},{"type": "view", "view": 1, "field": 1, "ratio": 3, "range": 2200, "signals": ["n.CZJHR.arBF_norm.iPF1_Weight.1.#FFFF00.PF1 - weight$PF1 - hmotnost$PF1 - Gewicht.kg$kg$kg","n.CZJHR.arBF_norm.diPF2_Weight.1.#00FF00.PF2 - weight$PF2 - hmotnost$PF2 - Gewicht.kg$kg$kg"]},{"type": "view", "view": 1, "field": 2, "ratio": 2, "range":   10, "signals": ["s.CZJHR.arBF_norm.iPF1_Step.0.#FFFF00.PF1 - step$PF1 - krok$PF1 - Schritt.PF_Step","s.CZJHR.arBF_norm.iPF2_Step.0.#00FF00.PF2 - step$PF2 - krok$PF2 - Schritt.PF_Step"]},{"type": "view", "view": 1, "field": 3, "ratio": 3, "range":   50, "signals": ["n.CZJHR.arBF_norm.iPF1_Temp.1.#FFFF00.PF1 - temperature$PF1 - teplota$PF1 - Temperatur.�C$�C$�C","n.CZJHR.arBF_norm.iPF2_Temp.1.#00FF00.PF2 - temperature$PF2 - teplota$PF2 - Temperatur.�C$�C$�C"]},{"type": "view", "view": 1, "field": 4, "ratio": 2, "range":   72, "signals": ["n.CZJHR.arBF_norm.iPF1_Age.1.#FFFF00.PF1 - age$PF1 - st���$PF1 - Alter.hrs$hod$Std","n.CZJHR.arBF_norm.iPF2_Age.1.#00FF00.PF2 - age$PF2 - st���$PF2 - Alter.hrs$hod$Std"]},{"type": "view", "view": 2, "field": 1, "ratio": 1, "range": 10, "signals": ["s.CZJHR.arBF_norm.iPF1_Status.1.#00FFFF.PF1 - status$PF1 - stav$PF1 - Status.PF_Status","s.CZJHR.arBF_norm.iPF2_Status.1.#FF00FF.PF2 - status$PF2 - stav$PF2 - Status.PF_Status"]}];
    //config = {"langDef": ["EN","CZ"]},{"tableDef": [ {"shortName":"norm","dbIdx":3,"tabName":"arBF_norm"},{"shortName":"slow","dbIdx":3,"tabName":"slow"}]},{"NameDef": [{"table":"", "column":"iWMU_Temp","fullName_EN":"Temperature WMU","fullName_CZ":"Teplota WMU","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"iWMU_Flow","fullName_EN":"Flow WMU","fullName_CZ":"Pr?tok WMU","unit_EN":"ticks","unit_CZ":"d?lk?"},{"table":"", "column":"diMF1_Weight","fullName_EN":"Weight MF1","fullName_CZ":"Hmotnost MF1","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_Weight","fullName_EN":"Weight MF2","fullName_CZ":"Hmotnost MF2","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_Weight","fullName_EN":"Weight PF1","fullName_CZ":"Hmotnost PF1","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_Weight","fullName_EN":"Weight PF2","fullName_CZ":"Hmotnost PF2","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_Weight","fullName_EN":"Weight PF3","fullName_CZ":"Hmotnost PF3","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"iMF1_Temp","fullName_EN":"Temperature MF1","fullName_CZ":"Teplota MF1","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"iMF2_Temp","fullName_EN":"Temperature MF2","fullName_CZ":"Teplota MF2","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"iPF1_Temp","fullName_EN":"Temperature PF1","fullName_CZ":"Teplota PF1","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"iPF2_Temp","fullName_EN":"Temperature PF2","fullName_CZ":"Teplota PF2","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"iPF3_Temp","fullName_EN":"Temperature PF3","fullName_CZ":"Teplota PF3","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"diMF1_RCP_DoughTime","fullName_EN":"Age MF1","fullName_CZ":"St??? kvasu MF1","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF2_RCP_DoughTime","fullName_EN":"Age MF2","fullName_CZ":"St??? kvasu MF2","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF1_RCP_DoughTime","fullName_EN":"Age PF1","fullName_CZ":"St??? kvasu PF1","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF2_RCP_DoughTime","fullName_EN":"Age PF2","fullName_CZ":"St??? kvasu PF2","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF3_RCP_DoughTime","fullName_EN":"Age PF3","fullName_CZ":"St??? kvasu PF3","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"iMF1_RCP","fullName_EN":"Recipe MF1","unit_EN":"Receptura MF1"},{"table":"", "column":"iMF1_RCP_Step","fullName_EN":"MF1 - krok","fullName_CZ":"MF1 - step"},{"table":"", "column":"iMF1_RCP_Status","fullName_EN":"MF1 - stav","fullName_CZ":"MF1 - status"},{"table":"", "column":"iMF1_AgitOn","fullName_EN":"MF1 - agit Time on","fullName_CZ":"MF1 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iMF1_AgitOff","fullName_EN":"MF1 - agit Time off","fullName_CZ":"MF1 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iMF1_AgitDirection","fullName_EN":"MF1 - m?d m?ch?n?","fullName_CZ":"MF1 - agit mode"},{"table":"", "column":"bMF1_RepumpAuto","fullName_EN":"MF1 - repump mode"},{"table":"", "column":"bMF1_LidOpen","fullName_EN":"MF1 - lid"},{"table":"", "column":"diMF1_RCP_Amount_need","fullName_EN":"MF1 : Amount need","fullName_CZ":"MF1 : Po?ad. mno?stv?","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF1_RCP_Rest_need","fullName_EN":"MF1 : Bread - need","fullName_CZ":"MF1 : Chl?b - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF1_RCP_Rest_actual","fullName_EN":"MF1 : Bread - actual","fullName_CZ":"MF1 : Chl?b - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF1_RCP_Water_need","fullName_EN":"MF1 : Water - need","fullName_CZ":"MF1 : Voda - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF1_RCP_Water_actual","fullName_EN":"MF1 : Water - actual","fullName_CZ":"MF1 : Voda - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"iMF1_RCP_WaterTemp_need","fullName_EN":"MF1 : Water - temper. need","fullName_CZ":"MF1 : Tepl. vody - po?ad.","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"diMF1_RCP_Flour_need","fullName_EN":"MF1 : Flour - need","fullName_CZ":"MF1 : Mouka - po?ad","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF1_RCP_Flour_actual","fullName_EN":"MF1 : Flour - actual","fullName_CZ":"MF1 : Mouka - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF1_RCP_AddFlour","fullName_EN":"MF1 : Add flour","fullName_CZ":"MF1 : P?idat mouku","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF1_RCP_FlourMix_need","fullName_EN":"MF1 : Flour mix. - need","fullName_CZ":"MF1 : M?ch?n? mouky - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diMF1_RCP_FlourMix_actual","fullName_EN":"MF1 : Flour mix. - actual","fullName_CZ":"MF1 : M?ch?n? mouky - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diMF1_RCP_Starter_need","fullName_EN":"MF1 : Starter - need","fullName_CZ":"MF1 : Starter - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF1_RCP_Starter_actual","fullName_EN":"MF1 : Starter - actual","fullName_CZ":"MF1 : Starter - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF1_RCP_Ferm1ph_need","fullName_EN":"MF1 : Intensive ferm.-need","fullName_CZ":"MF1 : Ferm. intenz. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF1_RCP_Ferm1ph_actual","fullName_EN":"MF1 : Intensive ferm.-actual","fullName_CZ":"MF1 : Ferm. intenz. mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF1_RCP_Ferm2ph_need","fullName_EN":"MF1 : Slow ferm.-need","fullName_CZ":"MF1 : Ferm. pomal?. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF1_RCP_Ferm2ph_actual","fullName_EN":"MF1 : Slow ferm.-actual","fullName_CZ":"MF1 : Ferm. pomal? mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF1_RCP_Ripen_need","fullName_EN":"MF1 : Ripen - need","fullName_CZ":"MF1 : Zr?n? - po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF1_RCP_Ripen_actual","fullName_EN":"MF1 : Ripen - actual","fullName_CZ":"MF1 : Zr?n? - hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF1_RCP_Using_need","fullName_EN":"MF1 : Using - need","fullName_CZ":"MF1 : Pou?it. - po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF1_RCP_Using_actual","fullName_EN":"MF1 : Using - actual","fullName_CZ":"MF1 : Pou?it. - hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"iMF2_RCP","fullName_EN":"Recipe MF1","unit_EN":"Receptura MF2"},{"table":"", "column":"iMF2_RCP_Step","fullName_EN":"MF2 - krok","fullName_CZ":"MF2 - step"},{"table":"", "column":"iMF2_RCP_Status","fullName_EN":"MF2 - stav","fullName_CZ":"MF2 - status"},{"table":"", "column":"iMF2_AgitOn","fullName_EN":"MF2 - agit Time on","fullName_CZ":"MF2 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iMF2_AgitOff","fullName_EN":"MF2 - agit Time off","fullName_CZ":"MF2 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iMF2_AgitDirection","fullName_EN":"MF2 - m?d m?ch?n?","fullName_CZ":"MF2 - agit mode"},{"table":"", "column":"bMF2_RepumpAuto","fullName_EN":"MF2 - repump mode"},{"table":"", "column":"bMF2_LidOpen","fullName_EN":"MF2 - lid"},{"table":"", "column":"diMF2_RCP_Amount_need","fullName_EN":"MF2 : Amount need","fullName_CZ":"MF2 : Po?ad. mno?stv?","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_RCP_Rest_need","fullName_EN":"MF2 : Bread - need","fullName_CZ":"MF2 : Chl?b - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_RCP_Rest_actual","fullName_EN":"MF2 : Bread - actual","fullName_CZ":"MF2 : Chl?b - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_RCP_Water_need","fullName_EN":"MF2 : Water - need","fullName_CZ":"MF2 : Voda - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_RCP_Water_actual","fullName_EN":"MF2 : Water - actual","fullName_CZ":"MF2 : Voda - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"iMF2_RCP_WaterTemp_need","fullName_EN":"MF2 : Water - temper. need","fullName_CZ":"MF2 : Tepl. vody - po?ad.","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"diMF2_RCP_Flour_need","fullName_EN":"MF2 : Flour - need","fullName_CZ":"MF2 : Mouka - po?ad","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_RCP_Flour_actual","fullName_EN":"MF2 : Flour - actual","fullName_CZ":"MF2 : Mouka - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_RCP_AddFlour","fullName_EN":"MF2 : Add flour","fullName_CZ":"MF2 : P?idat mouku","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_RCP_FlourMix_need","fullName_EN":"MF2 : Flour mix. - need","fullName_CZ":"MF2 : M?ch?n? mouky - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diMF2_RCP_FlourMix_actual","fullName_EN":"MF2 : Flour mix. - actual","fullName_CZ":"MF2 : M?ch?n? mouky - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diMF2_RCP_Starter_need","fullName_EN":"MF2 : Starter - need","fullName_CZ":"MF2 : Starter - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_RCP_Starter_actual","fullName_EN":"MF2 : Starter - actual","fullName_CZ":"MF2 : Starter - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diMF2_RCP_Ferm1ph_need","fullName_EN":"MF2 : Intensive ferm.-need","fullName_CZ":"MF2 : Ferm. intenz. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF2_RCP_Ferm1ph_actual","fullName_EN":"MF2 : Intensive ferm.-actual","fullName_CZ":"MF2 : Ferm. intenz. mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF2_RCP_Ferm2ph_need","fullName_EN":"MF2 : Slow ferm.-need","fullName_CZ":"MF2 : Ferm. pomal?. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF2_RCP_Ferm2ph_actual","fullName_EN":"MF2 : Slow ferm.-actual","fullName_CZ":"MF2 : Ferm. pomal? mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF2_RCP_Ripen_need","fullName_EN":"MF2 : Ripen - need","fullName_CZ":"MF2 : Zr?n? - po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF2_RCP_Ripen_actual","fullName_EN":"MF2 : Ripen - actual","fullName_CZ":"MF2 : Zr?n? - hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF2_RCP_Using_need","fullName_EN":"MF2 : Using - need","fullName_CZ":"MF2 : Pou?it. - po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diMF2_RCP_Using_actual","fullName_EN":"MF2 : Using - actual","fullName_CZ":"MF2 : Pou?it. - hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"iPF1_RCP","fullName_EN":"Recipe PF1","unit_EN":"Receptura PF1"},{"table":"", "column":"iPF1_RCP_Step","fullName_EN":"PF1 - krok","fullName_CZ":"PF1 - step"},{"table":"", "column":"iPF1_RCP_Status","fullName_EN":"PF1 - stav","fullName_CZ":"PF1 - status"},{"table":"", "column":"iPF1_AgitOn","fullName_EN":"PF1 - agit Time on","fullName_CZ":"PF1 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iPF1_AgitOff","fullName_EN":"PF1 - agit Time off","fullName_CZ":"PF1 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iPF1_AgitDirection","fullName_EN":"PF1 - m?d m?ch?n?","fullName_CZ":"PF1 - agit mode"},{"table":"", "column":"bPF1_RepumpAuto","fullName_EN":"PF1 - repump mode"},{"table":"", "column":"bPF1_LidOpen","fullName_EN":"PF1 - lid"},{"table":"", "column":"iPF1_Dest","fullName_EN":"PF1 - c?l p?e?erp.","fullName_CZ":"PF1 - destination"},{"table":"", "column":"diPF1_RCP_Amount_need","fullName_EN":"PF1 : Amount need","fullName_CZ":"PF1 : Po?ad. mno?stv?","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_RCP_Bread_need","fullName_EN":"PF1 : Bread - need","fullName_CZ":"PF1 : Chl?b - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_RCP_Bread_actual","fullName_EN":"PF1 : Bread - actual","fullName_CZ":"PF1 : Chl?b - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_RCP_Water_need","fullName_EN":"PF1 : Water - need","fullName_CZ":"PF1 : Voda - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_RCP_Water_actual","fullName_EN":"PF1 : Water - actual","fullName_CZ":"PF1 : Voda - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"iPF1_RCP_WaterTemp_need","fullName_EN":"PF1 : Water - temper. need","fullName_CZ":"PF1 : Tepl. vody - po?ad.","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"diPF1_RCP_SoakingNoAgit_need","fullName_EN":"PF1 : Soaking (mix. off) - need","fullName_CZ":"PF1 : Nam??en? (nem?chat) - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF1_RCP_SoakingNoAgit_actual ","fullName_EN":"PF1 : Soaking (mix. off) - actual","fullName_CZ":"PF1 : Nam??en? (nem?chat) - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF1_RCP_SoakingAgit_need","fullName_EN":"PF1 : Soaking (mix. on) - need","fullName_CZ":"PF1 : Nam??en? (m?chat) - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF1_RCP_SoakingAgit_actual","fullName_EN":"PF1 : Soaking (mix. on) - actual","fullName_CZ":"PF1 : Nam??en? (m?chat) - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF1_RCP_Flour_need","fullName_EN":"PF1 : Flour - need","fullName_CZ":"PF1 : Mouka - po?ad","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_RCP_Flour_actual","fullName_EN":"PF1 : Flour - actual","fullName_CZ":"PF1 : Mouka - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_RCP_AddFlour","fullName_EN":"PF1 : Add flour","fullName_CZ":"PF1 : P?idat mouku","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_RCP_FlourMix_need","fullName_EN":"PF1 : Flour mix. - need","fullName_CZ":"PF1 : M?ch?n? mouky - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF1_RCP_FlourMix_actual","fullName_EN":"PF1 : Flour mix. - actual","fullName_CZ":"PF1 : M?ch?n? mouky - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"iPF1_MDSource","fullName_EN":"PF1 : Zdroj mate?. kvasu","fullName_CZ":"PF1 : MD source"},{"table":"", "column":"diPF1_RCP_MD_need","fullName_EN":"PF1 : MD - need","fullName_CZ":"PF1 : Mate?. kvas - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_RCP_MD_actual","fullName_EN":"PF1 : MD - actual","fullName_CZ":"PF1 : Mate?. kvas - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF1_RCP_Ferm1ph_need","fullName_EN":"PF1 : Intensive ferm.-need","fullName_CZ":"PF1 : Ferm. intenz. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF1_RCP_Ferm1ph_actual","fullName_EN":"PF1 : Intensive ferm.-actual","fullName_CZ":"PF1 : Ferm. intenz. mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF1_RCP_Ferm2ph_need","fullName_EN":"PF1 : Slow ferm.-need","fullName_CZ":"PF1 : Ferm. pomal?. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF1_RCP_Ferm2ph_actual","fullName_EN":"PF1 : Slow ferm.-actual","fullName_CZ":"PF1 : Ferm. pomal? mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"iPF1_RCP_DoughHMI","fullName_EN":"PF1 : Stav t?sta","fullName_CZ":"PF1 : Dough status"},{"table":"", "column":"iPF2_RCP","fullName_EN":"Recipe PF2","unit_EN":"Receptura PF2"},{"table":"", "column":"iPF2_RCP_Step","fullName_EN":"PF2 - krok","fullName_CZ":"PF2 - step"},{"table":"", "column":"iPF2_RCP_Status","fullName_EN":"PF2 - stav","fullName_CZ":"PF2 - status"},{"table":"", "column":"iPF2_AgitOn","fullName_EN":"PF2 - agit Time on","fullName_CZ":"PF2 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iPF2_AgitOff","fullName_EN":"PF2 - agit Time off","fullName_CZ":"PF2 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iPF2_AgitDirection","fullName_EN":"PF2 - m?d m?ch?n?","fullName_CZ":"PF2 - agit mode"},{"table":"", "column":"bPF2_RepumpAuto","fullName_EN":"PF2 - repump mode"},{"table":"", "column":"bPF2_LidOpen","fullName_EN":"PF2 - lid"},{"table":"", "column":"iPF2_Dest","fullName_EN":"PF2 - c?l p?e?erp.","fullName_CZ":"PF2 - destination"},{"table":"", "column":"diPF2_RCP_Amount_need","fullName_EN":"PF2 : Amount need","fullName_CZ":"PF2 : Po?ad. mno?stv?","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_RCP_Bread_need","fullName_EN":"PF2 : Bread - need","fullName_CZ":"PF2 : Chl?b - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_RCP_Bread_actual","fullName_EN":"PF2 : Bread - actual","fullName_CZ":"PF2 : Chl?b - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_RCP_Water_need","fullName_EN":"PF2 : Water - need","fullName_CZ":"PF2 : Voda - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_RCP_Water_actual","fullName_EN":"PF2 : Water - actual","fullName_CZ":"PF2 : Voda - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"iPF2_RCP_WaterTemp_need","fullName_EN":"PF2 : Water - temper. need","fullName_CZ":"PF2 : Tepl. vody - po?ad.","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"diPF2_RCP_SoakingNoAgit_need","fullName_EN":"PF2 : Soaking (mix. off) - need","fullName_CZ":"PF2 : Nam??en? (nem?chat) - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF2_RCP_SoakingNoAgit_actual ","fullName_EN":"PF2 : Soaking (mix. off) - actual","fullName_CZ":"PF2 : Nam??en? (nem?chat) - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF2_RCP_SoakingAgit_need","fullName_EN":"PF2 : Soaking (mix. on) - need","fullName_CZ":"PF2 : Nam??en? (m?chat) - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF2_RCP_SoakingAgit_actual","fullName_EN":"PF2 : Soaking (mix. on) - actual","fullName_CZ":"PF2 : Nam??en? (m?chat) - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF2_RCP_Flour_need","fullName_EN":"PF2 : Flour - need","fullName_CZ":"PF2 : Mouka - po?ad","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_RCP_Flour_actual","fullName_EN":"PF2 : Flour - actual","fullName_CZ":"PF2 : Mouka - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_RCP_AddFlour","fullName_EN":"PF2 : Add flour","fullName_CZ":"PF2 : P?idat mouku","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_RCP_FlourMix_need","fullName_EN":"PF2 : Flour mix. - need","fullName_CZ":"PF2 : M?ch?n? mouky - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF2_RCP_FlourMix_actual","fullName_EN":"PF2 : Flour mix. - actual","fullName_CZ":"PF2 : M?ch?n? mouky - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"iPF2_MDSource","fullName_EN":"PF2 : Zdroj mate?. kvasu","fullName_CZ":"PF2 : MD source"},{"table":"", "column":"diPF2_RCP_MD_need","fullName_EN":"PF2 : MD - need","fullName_CZ":"PF2 : Mate?. kvas - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_RCP_MD_actual","fullName_EN":"PF2 : MD - actual","fullName_CZ":"PF2 : Mate?. kvas - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF2_RCP_Ferm1ph_need","fullName_EN":"PF2 : Intensive ferm.-need","fullName_CZ":"PF2 : Ferm. intenz. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF2_RCP_Ferm1ph_actual","fullName_EN":"PF2 : Intensive ferm.-actual","fullName_CZ":"PF2 : Ferm. intenz. mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF2_RCP_Ferm2ph_need","fullName_EN":"PF2 : Slow ferm.-need","fullName_CZ":"PF2 : Ferm. pomal?. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF2_RCP_Ferm2ph_actual","fullName_EN":"PF2 : Slow ferm.-actual","fullName_CZ":"PF2 : Ferm. pomal? mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"iPF2_RCP_DoughHMI","fullName_EN":"PF2 : Stav t?sta","fullName_CZ":"PF2 : Dough status"},{"table":"", "column":"iPF3_RCP","fullName_EN":"Recipe PF3","unit_EN":"Receptura PF3"},{"table":"", "column":"iPF3_RCP_Step","fullName_EN":"PF3 - krok","fullName_CZ":"PF3 - step"},{"table":"", "column":"iPF3_RCP_Status","fullName_EN":"PF3 - stav","fullName_CZ":"PF3 - status"},{"table":"", "column":"iPF3_AgitOn","fullName_EN":"PF3 - agit Time on","fullName_CZ":"PF3 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iPF3_AgitOff","fullName_EN":"PF3 - agit Time off","fullName_CZ":"PF3 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iPF3_AgitDirection","fullName_EN":"PF3 - m?d m?ch?n?","fullName_CZ":"PF3 - agit mode"},{"table":"", "column":"bPF3_RepumpAuto","fullName_EN":"PF3 - repump mode"},{"table":"", "column":"bPF3_LidOpen","fullName_EN":"PF3 - lid"},{"table":"", "column":"iPF3_Dest","fullName_EN":"PF3 - c?l p?e?erp.","fullName_CZ":"PF3 - destination"},{"table":"", "column":"diPF3_RCP_Amount_need","fullName_EN":"PF3 : Amount need","fullName_CZ":"PF3 : Po?ad. mno?stv?","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_RCP_Bread_need","fullName_EN":"PF3 : Bread - need","fullName_CZ":"PF3 : Chl?b - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_RCP_Bread_actual","fullName_EN":"PF3 : Bread - actual","fullName_CZ":"PF3 : Chl?b - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_RCP_Water_need","fullName_EN":"PF3 : Water - need","fullName_CZ":"PF3 : Voda - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_RCP_Water_actual","fullName_EN":"PF3 : Water - actual","fullName_CZ":"PF3 : Voda - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"iPF3_RCP_WaterTemp_need","fullName_EN":"PF3 : Water - temper. need","fullName_CZ":"PF3 : Tepl. vody - po?ad.","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"diPF3_RCP_SoakingNoAgit_need","fullName_EN":"PF3 : Soaking (mix. off) - need","fullName_CZ":"PF3 : Nam??en? (nem?chat) - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF3_RCP_SoakingNoAgit_actual ","fullName_EN":"PF3 : Soaking (mix. off) - actual","fullName_CZ":"PF3 : Nam??en? (nem?chat) - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF3_RCP_SoakingAgit_need","fullName_EN":"PF3 : Soaking (mix. on) - need","fullName_CZ":"PF3 : Nam??en? (m?chat) - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF3_RCP_SoakingAgit_actual","fullName_EN":"PF3 : Soaking (mix. on) - actual","fullName_CZ":"PF3 : Nam??en? (m?chat) - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF3_RCP_Flour_need","fullName_EN":"PF3 : Flour - need","fullName_CZ":"PF3 : Mouka - po?ad","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_RCP_Flour_actual","fullName_EN":"PF3 : Flour - actual","fullName_CZ":"PF3 : Mouka - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_RCP_AddFlour","fullName_EN":"PF3 : Add flour","fullName_CZ":"PF3 : P?idat mouku","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_RCP_FlourMix_need","fullName_EN":"PF3 : Flour mix. - need","fullName_CZ":"PF3 : M?ch?n? mouky - po?ad.","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"diPF3_RCP_FlourMix_actual","fullName_EN":"PF3 : Flour mix. - actual","fullName_CZ":"PF3 : M?ch?n? mouky - hotovo","unit_EN":"min","unit_CZ":"min"},{"table":"", "column":"iPF3_MDSource","fullName_EN":"PF3 : Zdroj mate?. kvasu","fullName_CZ":"PF3 : MD source"},{"table":"", "column":"diPF3_RCP_MD_need","fullName_EN":"PF3 : MD - need","fullName_CZ":"PF3 : Mate?. kvas - po?ad.","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_RCP_MD_actual","fullName_EN":"PF3 : MD - actual","fullName_CZ":"PF3 : Mate?. kvas - hotovo","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diPF3_RCP_Ferm1ph_need","fullName_EN":"PF3 : Intensive ferm.-need","fullName_CZ":"PF3 : Ferm. intenz. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF3_RCP_Ferm1ph_actual","fullName_EN":"PF3 : Intensive ferm.-actual","fullName_CZ":"PF3 : Ferm. intenz. mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF3_RCP_Ferm2ph_need","fullName_EN":"PF3 : Slow ferm.-need","fullName_CZ":"PF3 : Ferm. pomal?. mix-po?ad.","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diPF3_RCP_Ferm2ph_actual","fullName_EN":"PF3 : Slow ferm.-actual","fullName_CZ":"PF3 : Ferm. pomal? mix-hotovo","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"iPF3_RCP_DoughHMI","fullName_EN":"PF3 : Stav t?sta","fullName_CZ":"PF3 : Dough status"},{"table":"", "column":"diSF1_Weight","fullName_EN":"Weight SF1","fullName_CZ":"Hmotnost SF1","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diSF2_Weight","fullName_EN":"Weight SF2","fullName_CZ":"Hmotnost SF2","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diSF3_Weight","fullName_EN":"Weight SF3","fullName_CZ":"Hmotnost SF3","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diSF4_Weight","fullName_EN":"Weight SF4","fullName_CZ":"Hmotnost SF4","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"diSF5_Weight","fullName_EN":"Weight SF5","fullName_CZ":"Hmotnost SF5","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"iSF1_Temp","fullName_EN":"Temperature SF1","fullName_CZ":"Teplota SF1","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"iSF2_Temp","fullName_EN":"Temperature SF2","fullName_CZ":"Teplota SF2","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"iSF3_Temp","fullName_EN":"Temperature SF3","fullName_CZ":"Teplota SF3","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"iSF4_Temp","fullName_EN":"Temperature SF4","fullName_CZ":"Teplota SF4","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"iSF5_Temp","fullName_EN":"Temperature SF5","fullName_CZ":"Teplota SF5","unit_EN":"?C","unit_CZ":"?C"},{"table":"", "column":"diSF1_RCP_DoughTime","fullName_EN":"Age SF1","fullName_CZ":"St??? kvasu SF1","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diSF2_RCP_DoughTime","fullName_EN":"Age SF2","fullName_CZ":"St??? kvasu SF2","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diSF3_RCP_DoughTime","fullName_EN":"Age SF3","fullName_CZ":"St??? kvasu SF3","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diSF4_RCP_DoughTime","fullName_EN":"Age SF4","fullName_CZ":"St??? kvasu SF4","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"diSF5_RCP_DoughTime","fullName_EN":"Age SF5","fullName_CZ":"St??? kvasu SF5","unit_EN":"hrs","unit_CZ":"hod"},{"table":"", "column":"iSF1_RCP","fullName_EN":"Recipe SF1","unit_EN":"Receptura SF1"},{"table":"", "column":"iSF2_RCP","fullName_EN":"Recipe SF2","unit_EN":"Receptura SF2"},{"table":"", "column":"iSF3_RCP","fullName_EN":"Recipe SF3","unit_EN":"Receptura SF3"},{"table":"", "column":"iSF4_RCP","fullName_EN":"Recipe SF4","unit_EN":"Receptura SF4"},{"table":"", "column":"iSF5_RCP","fullName_EN":"Recipe SF5","unit_EN":"Receptura SF5"},{"table":"", "column":"iSF1_RCP_Status","fullName_EN":"SF1 - stav","fullName_CZ":"SF1 - status"},{"table":"", "column":"iSF2_RCP_Status","fullName_EN":"SF2 - stav","fullName_CZ":"SF2 - status"},{"table":"", "column":"iSF3_RCP_Status","fullName_EN":"SF3 - stav","fullName_CZ":"SF3 - status"},{"table":"", "column":"iSF4_RCP_Status","fullName_EN":"SF4 - stav","fullName_CZ":"SF4 - status"},{"table":"", "column":"iSF5_RCP_Status","fullName_EN":"SF5 - stav","fullName_CZ":"SF5 - status"},{"table":"", "column":"diSP1_Dose","fullName_EN":"SP1 - dose","fullName_CZ":"v?deji kvasu","unit_EN":"kg","unit_CZ":"kg"},{"table":"", "column":"bSF1_LidOpen","fullName_EN":"SF1 - lid"},{"table":"", "column":"iSF1_AgitOn","fullName_EN":"SF1 - agit Time on","fullName_CZ":"SF1 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF1_AgitOff","fullName_EN":"SF1 - agit Time off","fullName_CZ":"SF1 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF1_AgitDirection","fullName_EN":"SF1 - m?d m?ch?n?","fullName_CZ":"SF1 - agit mode"},{"table":"", "column":"bSF2_LidOpen","fullName_EN":"SF2 - lid"},{"table":"", "column":"iSF2_AgitOn","fullName_EN":"SF2 - agit Time on","fullName_CZ":"SF2 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF2_AgitOff","fullName_EN":"SF2 - agit Time off","fullName_CZ":"SF2 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF2_AgitDirection","fullName_EN":"SF2 - m?d m?ch?n?","fullName_CZ":"SF2 - agit mode"},{"table":"", "column":"bSF3_LidOpen","fullName_EN":"SF3 - lid"},{"table":"", "column":"iSF3_AgitOn","fullName_EN":"SF3 - agit Time on","fullName_CZ":"SF3 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF3_AgitOff","fullName_EN":"SF3 - agit Time off","fullName_CZ":"SF3 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF3_AgitDirection","fullName_EN":"SF3 - m?d m?ch?n?","fullName_CZ":"SF3 - agit mode"},{"table":"", "column":"bSF4_LidOpen","fullName_EN":"SF4 - lid"},{"table":"", "column":"iSF4_AgitOn","fullName_EN":"SF4 - agit Time on","fullName_CZ":"SF4 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF4_AgitOff","fullName_EN":"SF4 - agit Time off","fullName_CZ":"SF4 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF4_AgitDirection","fullName_EN":"SF4 - m?d m?ch?n?","fullName_CZ":"SF4 - agit mode"},{"table":"", "column":"bSF5_LidOpen","fullName_EN":"SF5 - lid"},{"table":"", "column":"iSF5_AgitOn","fullName_EN":"SF5 - agit Time on","fullName_CZ":"SF5 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF5_AgitOff","fullName_EN":"SF5 - agit Time off","fullName_CZ":"SF5 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF5_AgitDirection","fullName_EN":"SF5 - m?d m?ch?n?","fullName_CZ":"SF5 - agit mode"},{"table":"", "column":"iSF5_AgitOn","fullName_EN":"SF5 - agit Time on","fullName_CZ":"SF5 - m?ch?n? zapnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF5_AgitOff","fullName_EN":"SF5 - agit Time off","fullName_CZ":"SF5 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF5_AgitDirection","fullName_EN":"SF5 - m?d m?ch?n?","fullName_CZ":"SF5 - agit mode"},{"table":"", "column":"iSF5_AgitOff","fullName_EN":"SF5 - agit Time off","fullName_CZ":"SF5 - m?ch?n? vypnuto","unit_EN":"s","unit_CZ":"s"},{"table":"", "column":"iSF5_AgitDirection","fullName_EN":"SF5 - m?d m?ch?n?","fullName_CZ":"SF5 - agit mode"},{"table":"", "column":"iSF5_AgitDirection","fullName_EN":"SF5 - m?d m?ch?n?","fullName_CZ":"SF5 - agit mode"}]},{"TextlistDef": [{"textlist": "Status","values": [{"idx":0,"text_EN":"","text_CZ":"Klid"},{"idx":1,"text_EN":"","text_CZ":"B??"},{"idx":2,"text_EN":"","text_CZ":"P?eru?eno-obsluha"},{"idx":3,"text_EN":"","text_CZ":"P?eru?eno-alarm"}]},{"textlist": "DoughStatus","values": [{"idx":0,"text_EN":"","text_CZ":"pr?zdn?"},{"idx":1,"text_EN":"","text_CZ":"mlad?"},{"idx":2,"text_EN":"","text_CZ":"pou?iteln?"},{"idx":3,"text_EN":"","text_CZ":"star?"}]},{"textlist": "MF_Step","values": [{"idx":0,"text_EN":"","text_CZ":"Klid"},{"idx":1,"text_EN":"","text_CZ":"D?vkov?n? chleba"},{"idx":2,"text_EN":"","text_CZ":"D?vkov?n? vody"},{"idx":3,"text_EN":"","text_CZ":"D?vkov?n? vody"},{"idx":4,"text_EN":"","text_CZ":"Nam??en? nem?ch?"},{"idx":5,"text_EN":"","text_CZ":"Nam??en? m?ch?"},{"idx":6,"text_EN":"","text_CZ":"D?vkov?n? mouky"},{"idx":7,"text_EN":"","text_CZ":"D?vkov?n? mouky"},{"idx":8,"text_EN":"","text_CZ":"Rozm?ch?n? mouky"},{"idx":9,"text_EN":"","text_CZ":"D?vk. mate?. kvasu"},{"idx":10,"text_EN":"","text_CZ":"D?vk. mate?. kvasu"},{"idx":11,"text_EN":"","text_CZ":"D?vk. mate?. kvasu"},{"idx":12,"text_EN":"","text_CZ":"Fermentace - intenz. m?ch?n? "},{"idx":13,"text_EN":"","text_CZ":"Fermentace - pomal? m?ch?n? "},{"idx":14,"text_EN":"","text_CZ":"P?e?erp?n? - ?ek?n?"},{"idx":15,"text_EN":"","text_CZ":"P?e?erp?n? - ?ek?n?"},{"idx":16,"text_EN":"","text_CZ":"P?e?erp?n? - chod"},{"idx":18,"text_EN":"","text_CZ":"----"}]},{"textlist": "PF_Step","values": [{"idx":0,"text_EN":"","text_CZ":"Klid"},{"idx":1,"text_EN":"","text_CZ":"D?vkov?n? chleba"},{"idx":2,"text_EN":"","text_CZ":"D?vkov?n? vody"},{"idx":3,"text_EN":"","text_CZ":"D?vkov?n? vody"},{"idx":4,"text_EN":"","text_CZ":"Nam??en? nem?ch?"},{"idx":5,"text_EN":"","text_CZ":"Nam??en? m?ch?"},{"idx":6,"text_EN":"","text_CZ":"D?vkov?n? mouky"},{"idx":7,"text_EN":"","text_CZ":"D?vkov?n? mouky"},{"idx":8,"text_EN":"","text_CZ":"Rozm?ch?n? mouky"},{"idx":9,"text_EN":"","text_CZ":"D?vk. mate?. kvasu"},{"idx":10,"text_EN":"","text_CZ":"D?vk. mate?. kvasu"},{"idx":11,"text_EN":"","text_CZ":"D?vk. mate?. kvasu"},{"idx":12,"text_EN":"","text_CZ":"Fermentace - intenz. m?ch?n? "},{"idx":13,"text_EN":"","text_CZ":"Fermentace - pomal? m?ch?n? "},{"idx":14,"text_EN":"","text_CZ":"P?e?erp?n? - ?ek?n?"},{"idx":15,"text_EN":"","text_CZ":"P?e?erp?n? - ?ek?n?"},{"idx":16,"text_EN":"","text_CZ":"P?e?erp?n? - chod"},{"idx":18,"text_EN":"","text_CZ":"----"}]},{"textlist": "MD_Src","values": [{"idx":17,"text_EN":"","text_CZ":"MF1"},{"idx":18,"text_EN":"","text_CZ":"MF2 "}]},{"textlist": "AgitMode","values": [{"idx":0,"text_EN":"","text_CZ":"Vypnuto"},{"idx":1,"text_EN":"","text_CZ":"Trvale"},{"idx":2,"text_EN":"","text_CZ":"Cykluje"}]},{"textlist": "SF_Repump","values": [{"idx":31,"text_EN":"","text_CZ":"SF1"},{"idx":32,"text_EN":"","text_CZ":"SF2"},{"idx":33,"text_EN":"","text_CZ":"SF3"},{"idx":34,"text_EN":"","text_CZ":"SF4"},{"idx":35,"text_EN":"","text_CZ":"SF5"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"},{"idx":1,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"},{"idx":1,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"},{"idx":1,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"},{"idx":1,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"auto","text_CZ":"automat"},{"idx":1,"text_EN":"auto","text_CZ":"automat"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"}]},{"textlist": "","values": [{"idx":0,"text_EN":"open","text_CZ":"otev?eno"},{"idx":1,"text_EN":"open","text_CZ":"otev?eno"}]}]},{"View":[{"name_EN":"Overview", "name_CZ":"P?ehled", "defLang": "EN", "field":[{"minY":0, "maxY":35, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":1000, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":0}]},{"minY":0, "maxY":1500, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":1}]},{"minY":0, "maxY":3000, "relSize":3, "signal":[{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":35, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":1}]},{"minY":0, "maxY":35, "relSize":3, "signal":[{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":200, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":1}]},{"minY":0, "maxY":200, "relSize":3, "signal":[{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]}]},{"name_EN":"MF1 - operation", "name_CZ":"MF1 - operace", "defLang": "EN", "field":[{"minY":0, "maxY":1500, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":35, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":200, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":0}]},{"minY":0, "maxY":20, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#64C864", "textlist":"MF_Step"}]},{"minY":0, "maxY":6, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FFFF", "textlist":"Status"}]},{"minY":0, "maxY":500, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"AgitMode"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FF00", "textlist":""}]}]},{"name_EN":"MF1 - dosing", "name_CZ":"MF1 - d?vkov?n?", "defLang": "EN", "field":[{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":1500, "relSize":1, "signal":[{"type": "analog", "table": "slow", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":350, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":650, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":35, "relSize":1, "signal":[{"type": "analog", "table": "slow", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":550, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]}]},{"name_EN":"MF1 - fermentation", "name_CZ":"MF1 - fermentace", "defLang": "EN", "field":[{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009600", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#960000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":550, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":550, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]}]},{"name_EN":"MF2 - operation", "name_CZ":"MF2 - operace", "defLang": "EN", "field":[{"minY":0, "maxY":1500, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":35, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":200, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":0}]},{"minY":0, "maxY":20, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#64C864", "textlist":"MF_Step"}]},{"minY":0, "maxY":6, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FFFF", "textlist":"Status"}]},{"minY":0, "maxY":500, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"AgitMode"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FF00", "textlist":""}]}]},{"name_EN":"MF2 - dosing", "name_CZ":"MF2 - d?vkov?n?", "defLang": "EN", "field":[{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":1500, "relSize":1, "signal":[{"type": "analog", "table": "slow", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":350, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":650, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":35, "relSize":1, "signal":[{"type": "analog", "table": "slow", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":550, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]}]},{"name_EN":"MF2 - fermentation", "name_CZ":"MF2 - fermentace", "defLang": "EN", "field":[{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009600", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#960000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":550, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":550, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]}]},{"name_EN":"PF1 - operation", "name_CZ":"PF1 - operace", "defLang": "EN", "field":[{"minY":0, "maxY":1200, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":35, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":200, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":0}]},{"minY":0, "maxY":20, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#64C864", "textlist":"PF_Step"}]},{"minY":0, "maxY":6, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FFFF", "textlist":"Status"}]},{"minY":0, "maxY":500, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"AgitMode"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FF00", "textlist":""}]},{"minY":0, "maxY":35, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"SF_Repump"}]}]},{"name_EN":"PF1 - dosing", "name_CZ":"PF1 - d?vkov?n?", "defLang": "EN", "field":[{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":1500, "relSize":1, "signal":[{"type": "analog", "table": "slow", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":350, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":650, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":650, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#960000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009600", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":550, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]}]},{"name_EN":"PF1 - fermentation", "name_CZ":"PF1 - fermentace", "defLang": "EN", "field":[{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":"MD_Src"}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009600", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#960000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":4, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"DoughStatus"}]}]},{"name_EN":"PF2 - operation", "name_CZ":"PF2 - operace", "defLang": "EN", "field":[{"minY":0, "maxY":1200, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":35, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":200, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":0}]},{"minY":0, "maxY":20, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#64C864", "textlist":"PF_Step"}]},{"minY":0, "maxY":6, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FFFF", "textlist":"Status"}]},{"minY":0, "maxY":500, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"AgitMode"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FF00", "textlist":""}]},{"minY":0, "maxY":35, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"SF_Repump"}]}]},{"name_EN":"PF2 - dosing", "name_CZ":"PF2 - d?vkov?n?", "defLang": "EN", "field":[{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":1500, "relSize":1, "signal":[{"type": "analog", "table": "slow", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":350, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":650, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":650, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#960000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009600", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":550, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]}]},{"name_EN":"PF2 - fermentation", "name_CZ":"PF2 - fermentace", "defLang": "EN", "field":[{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":"MD_Src"}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009600", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#960000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":4, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"DoughStatus"}]}]},{"name_EN":"PF3 - operation", "name_CZ":"PF3 - operace", "defLang": "EN", "field":[{"minY":0, "maxY":1200, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":35, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":200, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":0}]},{"minY":0, "maxY":20, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#64C864", "textlist":"PF_Step"}]},{"minY":0, "maxY":6, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FFFF", "textlist":"Status"}]},{"minY":0, "maxY":500, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"AgitMode"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#00FF00", "textlist":""}]},{"minY":0, "maxY":35, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"SF_Repump"}]}]},{"name_EN":"PF3 - dosing", "name_CZ":"PF3 - d?vkov?n?", "defLang": "EN", "field":[{"minY":0, "maxY":30, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0}]},{"minY":0, "maxY":1500, "relSize":1, "signal":[{"type": "analog", "table": "slow", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":350, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":650, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":650, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#960000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009600", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":550, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#969600", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]}]},{"name_EN":"PF3 - fermentation", "name_CZ":"PF3 - fermentace", "defLang": "EN", "field":[{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":"MD_Src"}]},{"minY":0, "maxY":150, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009600", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#960000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]},{"minY":0, "maxY":24, "relSize":2, "signal":[{"type": "analog", "table": "slow", "color": "#009696", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":4, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"DoughStatus"}]}]},{"name_EN":"Storage fermenters", "name_CZ":"Skladovac? fermentory", "defLang": "EN", "field":[{"minY":0, "maxY":5000, "relSize":5, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":35, "relSize":5, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":200, "relSize":5, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1},{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":1},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":1},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":1}]},{"minY":0, "maxY":30, "relSize":5, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":0},{"type": "analog", "table": "norm", "color": "#FF00FF", "decimal":0},{"type": "analog", "table": "norm", "color": "#FFFF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":0}]},{"minY":0, "maxY":5, "relSize":5, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"Status"},{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"Status"},{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":"Status"},{"type": "multitext", "table": "norm", "color": "#00FF00", "textlist":"Status"},{"type": "multitext", "table": "norm", "color": "#00FFFF", "textlist":"Status"}]},{"minY":0, "maxY":1000, "relSize":2, "signal":[{"type": "analog", "table": "norm", "color": "#FF0000", "decimal":1}]}]},{"name_EN":"Storage fermenter 1 - detail", "name_CZ":"Skladovac? fermentor 1 - detail", "defLang": "EN", "field":[{"minY":0, "maxY":5, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"Status"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":500, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"AgitMode"}]}]},{"name_EN":"Storage fermenter 2 - detail", "name_CZ":"Skladovac? fermentor 2 - detail", "defLang": "EN", "field":[{"minY":0, "maxY":5, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"Status"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":500, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"AgitMode"}]}]},{"name_EN":"Storage fermenter 3 - detail", "name_CZ":"Skladovac? fermentor 3 - detail", "defLang": "EN", "field":[{"minY":0, "maxY":5, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"Status"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":500, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"AgitMode"}]}]},{"name_EN":"Storage fermenter 4 - detail", "name_CZ":"Skladovac? fermentor 4 - detail", "defLang": "EN", "field":[{"minY":0, "maxY":5, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"Status"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":500, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"AgitMode"}]}]},{"name_EN":"Storage fermenter 5 - detail", "name_CZ":"Skladovac? fermentor 5 - detail", "defLang": "EN", "field":[{"minY":0, "maxY":5, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF0000", "textlist":"Status"}]},{"minY":0, "maxY":2, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FFFF00", "textlist":""}]},{"minY":0, "maxY":500, "relSize":1, "signal":[{"type": "analog", "table": "norm", "color": "#00FF00", "decimal":0},{"type": "analog", "table": "norm", "color": "#00FFFF", "decimal":0}]},{"minY":0, "maxY":3, "relSize":1, "signal":[{"type": "multitext", "table": "norm", "color": "#FF00FF", "textlist":"AgitMode"}]}]}]};
    //data = [{"id": "CZJHR.arBF_norm.iPF1_Weight","times": [510105600,510105900,510106200,510106500,510106800],"vals": [500,3200,750,1000,1500]},{"id": "CZJHR.arBF_norm.diPF2_Weight","times": [510105600,510105900,510106200,510106500,510106800],"vals": [150.6,170.8,192.5,220.5,250.3]},{"id": "CZJHR.arBF_norm.iPF1_Step","times": [510105600,510105900,510106200,510106500,510106800],"vals": [1,1,2,2,5]},{"id": "CZJHR.arBF_norm.iPF2_Step","times": [510105600,510105900,510106200,510106500,510106800],"vals": [8,2,4,5,6]},{"id": "CZJHR.arBF_norm.iPF1_Temp","times": [510105600,510105900,510106200,510106500,510106800],"vals": [25.8,25.3,26.0,25.7,24.2]},{"id": "CZJHR.arBF_norm.diPF2_Temp","times": [510105600,510105900,510106200,510106500,510106800],"vals": [30.2,31.1,29.8,27.9,28.4]},{"id": "CZJHR.arBF_norm.iPF1_Age","times": [510105600,510105900,510106200,510106500,510106800],"vals": [27.1,37.1,47.1,57.1,67.1]},{"id": "CZJHR.arBF_norm.iPF2_Age","times": [510105600,510105900,510106200,510106500,510106800],"vals": [10.5,20.5,30.5,40.5,50.5]},{"id": "CZJHR.arBF_norm.iPF1_Status","times": [510105600,510105900,510106200,510106500,510106800],"vals": [5,4,3,2,1]},{"id": "CZJHR.arBF_norm.iPF2_Status","times": [510105600,510105900,510106200,510106500,510106800],"vals": [1,2,5,2,3]}];

    var data;

    // operace my�i a kl�vesnice
    var canX,
        canY,
        zoomCanX,
        lastCanX,
        mouseIsDown = 0,
        zoom = false,
        reset = false;

    // event listener
    document.addEventListener("DOMContentLoaded",init,false);

    // inicializace
    function init() {

      // p�izp�soben� plo�e
      iWidth = windowWidth();
      iHeight = windowHeight();

      chartWidth = iWidth-fieldLeftAdjust-fieldBreakVals-fieldValWidth-fieldRightAdjust;
      chartHeight = iHeight-fieldTopAdjust-fieldBottomAdjust;

      // klikac� mapa
      // index nula vyhrazen pro oblast grafu
      // 1 - 35 pro viditelnost sign�lu
      clickMaps = {0: {"id":["chart"],"coords": [posX+fieldLeftAdjust,posY+fieldTopAdjust,posX+fieldLeftAdjust+chartWidth,posY+fieldTopAdjust+chartHeight],"offset": [""]},
                   1: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   2: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   3: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   4: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   5: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   6: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   7: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   8: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   9: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   10: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   11: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   12: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   13: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   14: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   15: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   16: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   17: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   18: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   19: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   20: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   21: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   22: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   23: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   24: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   25: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   26: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   27: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   28: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   29: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   30: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   31: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   32: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   33: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   34: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                   35: {"id":[""],"coords": [],"visibility": ["true"],"offset": [0]},
                  };

      // aktivn� canvas - pro operace my�i - kreslen� kurzoru
      activeCanvasElement = $("#active_canvas");
      activeCanvas = activeCanvasElement[0].getContext('2d');
      $('#activeCanvas').attr('width',iWidth);
      $('#activeCanvas').attr('height',iHeight);
      activeCanvasElement[0].addEventListener("mousedown",mouseDown,false);
      activeCanvasElement[0].addEventListener("mousemove",mouseMove,false);
      activeCanvasElement[0].addEventListener("mouseup",mouseUp,false);
      window.addEventListener("keydown",keyDown,false )
      canvasOffsetLeft = activeCanvasElement.offset().left;
      canvasOffsetTop = activeCanvasElement.offset().top;

      // pop�ed� view
      frontCanvasElement = $("#front_canvas");
      frontCanvas = frontCanvasElement[0].getContext('2d');
      $('#frontCanvas').attr('width',iWidth);
      $('#frontCanvas').attr('height',iHeight);

      // sign�ly - canvas m� rozm�r a um�st�n� dle oblasti grafu
      signalCanvasElement = $("#signal_canvas");
      signalCanvas = signalCanvasElement[0].getContext('2d');
      $('#signalCanvas').attr('width',chartWidth);
      $('#signalCanvas').attr('height',chartHeight);
      $('#signalCanvas').attr('top',posY+fieldTopAdjust);
      $('#signalCanvas').attr('left',posX+fieldLeftAdjust);

      // pozad� grafu - m��ka
      backCanvasElement = $("#back_canvas");
      backCanvas = backCanvasElement[0].getContext('2d');
      $('#backCanvas').attr('width',chartWidth);
      $('#backCanvas').attr('height',chartHeight);
      $('#backCanvas').css('cursor','pointer');

      var timeSec = getCurrentTime();
      var mod = timeSec%(stepGridTime[timeAxisIdx]*60);

      beginTime = timeSec - mod - (timeAxisLength[timeAxisIdx]*3600 - (stepGridTime[timeAxisIdx]*60)); // + stepGridTime[timeAxisIdx]*60;

      factory = "CZJHR_BF";
      view = 1;

      //getConfig(factory);
      getConfig3();
    };

    function windowWidth() {
      return $(window).width();
    };

    function windowHeight() {
      //return window.innerHeight;
      return $(window).height()-50;
    };

    // operace kl�vesnice a my�i

    function getClickStep () {
      switch (timeAxisIdx) {
      case 0:
        return 5;
        break;
      case 1:
        return 5;
        break;
      case 2:
        return 10;
        break;
      case 3:
        return 20;
        break;
      case 4:
        return 30;
        break;
      case 5:
        return 60;
        break;
      case 6:
        return 120;
        break;
      case 7:
        return 240;
        break;
      case 8:
        return 600;
        break;
      case 9:
        return 1800;
        break;
      };
    };

    function keyDown(event) {
    var clickStep = 5;

      // posun vlevo
      if (event.keyCode == 37) {
        if ((markerTime - clickStep) >= beginTime) {
          clickStep = getClickStep();
          markerTime = markerTime - (markerTime%clickStep) - clickStep;
          drawCursor(markerTime);
        }
        else {
          backShift();
        };
      };

      // posun vpravo
      if (event.keyCode == 39) {
        if ((markerTime + clickStep) <= (beginTime + timeAxisLength[timeAxisIdx]*3600)) {
          clickStep = getClickStep();
          markerTime = markerTime - (markerTime%clickStep) + clickStep;
          drawCursor(markerTime);
        }
        else {
          fwdShift();
        };
      };
    };

    function mouseDown() {

      mouseIsDown = 1;

      canX = (event.x-canvasOffsetLeft)+0.5;
      canY = (event.y-canvasOffsetTop)+0.5;

      // oblast grafu
      if ((canX > clickMaps[0]["coords"][0]) && (canX < clickMaps[0]["coords"][2]) && (canY > clickMaps[0]["coords"][1]) && (canY < clickMaps[0]["coords"][3])) {
        if (zoom == false) {
          drawCursor(canX);
        }
        else { // m�d zoom
          zoomCanX = canX;
        };
      };

      for (var m=1;m<=MAX_CLICKMAPS;m++) {

        if ((canX  > clickMaps[m]["coords"][0]) && (canX < clickMaps[m]["coords"][2]) && (canY > clickMaps[m]["coords"][1]) && (canY < clickMaps[m]["coords"][3])) {
          if (clickMaps[m]["visibility"] == "true") {
            clickMaps[m]["visibility"] = "false";
          }
          else {
            clickMaps[m]["visibility"] = "true";
          };

          view = $('#group').val();
          lang = getLangIdx(lang);
          redrawChart(view,beginTime,markerTime,timeAxisIdx);
          redrawTimeAxis(view,lang);
          redrawValues(view,markerTime,lang);
          redrawLegend(view,lang);
        };
      };
    };

    function mouseUp() {
    var zoomLength = 0,
        zoomStartTime,
        zoomEndTime;

      canX = (event.x-canvasOffsetLeft)+0.5;
      canY = (event.y-canvasOffsetTop)+0.5;

      mouseIsDown = 0;

      // oblast grafu - sou�adnice X
      if ((canX > clickMaps[0]["coords"][0]) && (canX < clickMaps[0]["coords"][2])) {

        // operace ZOOM
        if (zoom == true) {
          drawCursor(canX);

          // v�b�r v pixelech
          zoomLength = Math.abs(canX - zoomCanX);

          // jak�mu �asu odpov�d� 1px
          koefFieldWidth = timeAxisLength[timeAxisIdx]*3600/(chartWidth);

          zoomStartTime = beginTime + Math.round((zoomCanX-fieldLeftAdjust)*koefFieldWidth);
          zoomEndTime = beginTime + Math.round((canX-fieldLeftAdjust)*koefFieldWidth);

          for (var i=0;i<=timeAxisLength.length;i++) {

            if ((zoomLength*koefFieldWidth/3600) < timeAxisLength[i]) {
              timeAxisIdx = i;
              if (((zoomEndTime - zoomStartTime)/3600) > (timeAxisLength[i])) {
                timeAxisIdx = timeAxisIdx++;
              };

              // p�epo�et po��tku grafu dle kroku nov� m��ky
              beginTime = zoomStartTime - (zoomStartTime%(stepGridTime[timeAxisIdx]*60));

              // marker um�st�me na konec zoom oblasti
              markerTime = beginTime + timeAxisLength[timeAxisIdx]*3600;

              view = $('#group').val();
              lang = getLangIdx(lang);
              redrawChart(view,beginTime,markerTime,timeAxisIdx);
              redrawTimeAxis(view,lang);
              redrawValues(view,markerTime,lang);
              redrawBeginTime(beginTime,lang);
              redrawMarkerTime(markerTime,lang);
              break;
            };
          };
          zoom = false;
          zoomSignal("ZOOM");
        };
      };
    };

    function mouseMove() {

      canX = (event.x-canvasOffsetLeft)+0.5;
      canY = (event.y-canvasOffsetTop)+0.5;

      // oblast grafu - sou�adnice X
      if ((canX > clickMaps[0]["coords"][0]) && (canX < clickMaps[0]["coords"][2])) {

        if ((mouseIsDown == 1) && (zoom == false)) {
          koefFieldWidth = timeAxisLength[timeAxisIdx]*3600/(chartWidth);
          markerTime = beginTime + Math.round((canX-fieldLeftAdjust)*koefFieldWidth);
          drawCursor(canX);
          redrawMarkerTime(markerTime,lang);
          lastCanX = canX;
        };

        if ((mouseIsDown == 1) && (zoom == true)) {
          drawCursor(zoomCanX);
          drawCursor(canX);
        };
      };

      for (var i=1;i<=MAX_CLICKMAPS;i++) {
        if ((canX  > clickMaps[i]["coords"][0]) && (canX < clickMaps[i]["coords"][2]) && (canY > clickMaps[i]["coords"][1]) && (canY < clickMaps[i]["coords"][3])) {
          document.getElementById("body").style.cursor = "pointer";
        }
        else {
          document.getElementById("body").style.cursor = "auto";
        };
      };
    };

    // vykreslen� kurzoru
    function drawCursor(x) {
    var markerX,
        timeX;

      view = $('#group').val();
      lang = getLangIdx(lang);

      //jak�mu �asu odpov�d� 1px
      koefFieldWidth = timeAxisLength[timeAxisIdx]*3600/(chartWidth);

      // marker time
      if (x > 100000) {

        markerTime = x;
        timeX = (markerTime - beginTime);
        if (timeX < (timeAxisLength[timeAxisIdx]*3600)) {

        eraseActiveCanvas(0);

        redrawMarkerTime(markerTime,lang);

        markerX = Math.round(timeX/koefFieldWidth);

        redrawValues(view,markerTime,lang);

        activeCanvas.strokeStyle = WHITE;

        activeCanvas.beginPath();
          activeCanvas.moveTo(posX+fieldLeftAdjust+markerX,posY+fieldTopAdjust);
          activeCanvas.lineTo(posX+fieldLeftAdjust+markerX,posY+fieldTopAdjust+chartHeight);
          activeCanvas.stroke();
        activeCanvas.closePath();

        };
      }

      // pozice x
      else {
          if ((mouseIsDown == 1) && (zoom == true)) {
            eraseActiveCanvas(x);
          };

          if ((mouseIsDown == 1) && (zoom == false)) {
            eraseActiveCanvas(0);

            // jak�mu �asu odpov�d� 1px
            markerTime = beginTime + Math.round((canX-fieldLeftAdjust)*koefFieldWidth);
            redrawMarkerTime(markerTime,lang);
            redrawValues(view,markerTime,lang);
          };

          activeCanvas.strokeStyle = WHITE;

          activeCanvas.beginPath();
            activeCanvas.moveTo(x,posY+fieldTopAdjust);
            activeCanvas.lineTo(x,posY+fieldTopAdjust+chartHeight);
            activeCanvas.stroke();
          activeCanvas.closePath();
      };
    };

    function eraseActiveCanvas(s) {
      x = (s == 0) ? posX : s;
      width = (s == 0) ? iWidth : canX-zoomCanX;
      activeCanvas.clearRect(x,posY,width,iHeight);
    };

    // globalni funkce
    function addZero(i) {
      i = i < 10 ? "0" + String(i) : i;
      return i;
    };

    function getFormatedDateTime(inPktime,lang) {
    var pktime = new Pktime();
    var dateTimeString = "";

      switch (lang) {
      case 0:
        weekday = daysEN0;
        break;
      case 1:
        weekday = daysCZ0;
        break;
      case 2:
        weekday = daysDE0;
        break;
      };

      pktime.setValue(inPktime);
      var dateTime = pktime.getDate();

      var day = weekday[dateTime.getDay()];
      var dd = addZero(dateTime.getDate());
      var MM = addZero(1 + dateTime.getMonth());
      var yyyy = dateTime.getFullYear();
      var hh = addZero(dateTime.getHours());
      var mm = addZero(dateTime.getMinutes());
      var ss = addZero(dateTime.getSeconds());

      dateTimeString = weekday[dateTime.getDay()].slice(0,3) + "," + dd + "." + MM + "." + yyyy + "  " + hh + ":" + mm + ":" + ss;
      return dateTimeString;
    };

    function getFormatedTime(inPktime) {
    var pktime = new Pktime(),
        timeString = "";

      pktime.setValue(inPktime);
      var dateTime = pktime.getDate();

      var hh = addZero(dateTime.getHours()-1);
      var mm = addZero(dateTime.getMinutes());
      var ss = addZero(dateTime.getSeconds());

      timeString = hh + ":" + mm + ":" + ss;
      return timeString;
    };

    function getCurrentTime() {
    var pktime = new Pktime(),
        d = new Date();
      pktime.setValue(d);
      return pktime.getPktime();
    };

    // server - klient funkce

    // na�ten� konfigurace ze serveru
    function getConfig(factory) {
    var url_1 = '/graphs_get_config?factory=' + factory + '&' + d.getTime();

      $.ajax({ url: url_1,
    		async: true,
    		dataType: "json",
    		success: function(data,textStatus) {
           console.log('get config');
           config = data;
           saveConfig();
        }
      });
    };

    // na�ten� konfigurace ze serveru
    function getConfig2(factory) {
    var url_1 = '/graphs_get_config2?factory=' + factory + '&' + d.getTime();

      $.ajax({ url: url_1,
    		async: true,
    		dataType: "json",
    		success: function(data,textStatus) {
           console.log('get config2');
           config = data;
           saveConfig();
        }
      });
    };
    // pokus na�ten� konfigurace ze serveru
    function getConfig3() {
    var url_1 = 'graph/getConfig';
    console.log("Hello Config");
    var nameView = "name_" + "EN";
    $.ajax({
        url: url_1,
        async: true,
        dataType: "json",
        success: function (data, textStatus) {
            console.log('get config3');
            config = data;
            for (i = 0; i < 40; i++) {
                console.log(data.Config[4].View[22][nameView]);
            }
            //saveConfig();
        }
    });
    };

    // z�sk�n� dat ze serveru ( p�i reloadu,zm�n� view)
    function getData(factory,beginTime,timeAxisLength,view) {
    var url_1 = '/graphs_get_data?factoryId=' + factory + '&beginTime=' + beginTime + '&timeAxisLength=' + timeAxisLength + '&view=' +  view + '&' + d.getTime();
      $.ajax({ url: url_1,
    		async: false,
    		dataType: "json",
    		success: function(data,textStatus) {
    		  window.data = data;
    		  console.log('get data');
        },
        complete: function() {
        }
      });
    };

    // ulozeni konfigurace
    function saveConfig() {
      setDefLang(config.langDef);
      enbLangs = config.langEnb;

      for (var i=0;i<config.length;i++) {
        switch (config[i].type) {
          case "multitext" : setMultitext(config[i].name,config[i].strings);
          break;
          //prijde max jednou
          case "title" : setTitles(config[i].strings);
          break;
          case "view" : setViews(config[i].view,config[i].field,config[i].ratio,config[i].range,config[i].signals);
          break;
        };
      };

        getData(factory,beginTime,timeAxisLength[timeAxisIdx]*3600,view);

        view = $('#group').val();
        lang = getLangIdx(lang);

        redrawScreen();
        redrawTitle(view,lang);
        redrawChart(view,beginTime,markerTime,timeAxisIdx);
        redrawTimeAxis(view,lang)
        redrawBeginTime(beginTime,lang);
        redrawMarkerTime(beginTime,lang);
        drawCursor(beginTime);
        redrawValues(view,markerTime,lang);
        redrawLegend(view,lang);

    };

    // nastaven� prom�nn�ch dle na�ten� konfigurace

    function setDefLang(lang) {
    var title;
        title = "lang:" + lang;
        console.log(title);
        $('#lang').attr('value',title);
    };

    // {"type": "multitext","name": "PF_Step","strings": ["step0$krok0$Schritt0","step1$krok1$Schritt1","step2$krok2$Schritt2","step3$krok3$Schritt3","step4$krok4$Schritt4"]}
    // multitexts[name][strings]
    function setMultitext(name,strings) {
    var iFreePos = -1,
        iFindName = -1;

      for (var i=1;i<20;i++) {
        if (multitexts[i]["name"] == name) {
          iFindName = i;
        };
        if (multitexts[i]["name"] == "") {
          iFreePos = i;
          break;
        };
      };

      if ((iFindName = -1) && (iFreePos != -1)) {
        multitexts[iFreePos]["name"] = name;
        multitexts[iFreePos]["strings"] = strings;
      };
    };

    // {"type": "title","strings": ["","Overview$P�ehled$�bersicht","PF1 - operation$PF1 - operace$PF1 - Betrieb"]}
    // titles[strings]
    function setTitles(strings) {
      titles = strings;
    };

    // {"type": "view","view": 1,"field": 1,"ratio": 1,"range": 10,"signals": ["n.CZJHR.arBF_norm.iPF1_Status.1.#FFFF00.PF1 - status$PF1 - stav$PF1 - Status.PF_Status","n.CZJHR.arBF_norm.iPF2_Status.1.#00FF00.PF2 - status$PF2 - stav$PF2 - Status.PF_Status"]}
    // views[view]["field_ratio"]["field_range"]["signals"]
    function setViews(view,field,ratio,range,signals) {
      views[view]["field_ratio"][field] = ratio;
      views[view]["field_range"][field] = range;
      views[view]["signals"][field] = signals;
    };

    // funkce pro kreslen� na canvas
    function redrawScreen() {

      // vy�i�t�n� a p�ekreslen� plochy mimo backCanvas

      // lev� ��st
      frontCanvas.clearRect(posX,posY,fieldLeftAdjust,iHeight);
      frontCanvas.fillStyle = colorView;
      frontCanvas.fillRect(posX,posY,fieldLeftAdjust,iHeight);

      // horn� ��st
      frontCanvas.clearRect(posX,posY,iWidth,fieldTopAdjust-0.5);
      frontCanvas.fillStyle = colorView;
      frontCanvas.fillRect(posX,posY,iWidth,fieldTopAdjust+0.5);

      // prav� ��st
      frontCanvas.clearRect(posX+iWidth-fieldRightAdjust,posY,fieldRightAdjust-0.5,iHeight);
      frontCanvas.fillStyle = colorView;
      frontCanvas.fillRect(posX+iWidth-fieldRightAdjust,posY,fieldRightAdjust+0.5,iHeight);

      // spodn� ��st
      frontCanvas.clearRect(posX+1,posY+fieldTopAdjust+chartHeight,iWidth-2,fieldBottomAdjust-0.5);
      frontCanvas.fillStyle = colorView;
      frontCanvas.fillRect(posX+1,posY+fieldTopAdjust+chartHeight,iWidth-2,fieldBottomAdjust+0.5);

      // vn�j�� or�mov�n�
      frontCanvas.strokeStyle = colorFrames;
      frontCanvas.strokeRect(posX,posY,iWidth,iHeight);

      // linka pod titulkem
      frontCanvas.strokeStyle = colorFrames;
      frontCanvas.lineWidth = 1;

      frontCanvas.beginPath();
        frontCanvas.moveTo(posX,posY+titleBarHeight);
        frontCanvas.lineTo(posX+iWidth,posY+titleBarHeight);
        frontCanvas.stroke();
      frontCanvas.closePath();

    };

    function getViewInfo(view) {
    var viewInfo = [0,0];

      // fields
      for (var field=1;field<=MAX_FIELDS;field++) {
        if (views[view]["field_ratio"][field] > 0) {
          viewInfo[0] += views[view]["field_ratio"][field];
          viewInfo[1]++;
        };
      };
      return viewInfo;
    };

    function redrawValues(view,markerTime,lang) {
    var viewInfo = new Array(),
        fieldSumRatio = 0,
        fieldsCnt = 0,
        koefFieldHeight = 0,
        FieldPosY = 0,
        fieldSigHeight = 0,
        value,
        time,
        chartHeightLoc;

      // fields
      viewInfo = getViewInfo(view);
      fieldSumRatio = viewInfo[0];
      fieldsCnt = viewInfo[1];
      chartHeightLoc = chartHeight - chartHeight%fieldSumRatio;

      if (fieldSumRatio != 0) { //ochrana proti d�leni nulou
        koefFieldHeight = (chartHeightLoc-fieldBrake*(fieldsCnt-1))/fieldSumRatio;
      };

      // field
      for (var field=1;field<=fieldsCnt;field++) {
        FieldPosY = 0;
        for (var j=1;j<field;j++) {
         FieldPosY += (views[view]["field_ratio"][j]*koefFieldHeight)+fieldBrake;
        };

        fieldSigHeight = views[view]["field_ratio"][field]*koefFieldHeight;

        var signals = new Array(),
            signal = new Array(),
            mask = "",
            signalStrVal = "",
            signalIdCfg = "",
            signalIdData = "",
            dataLastX = 0,
            dataLastY = 0,
            xPos,
            a,
            regresInterval = 30;

        signals = views[view]["signals"][field];

        // signals
        for (var x=0;x<signals.length;x++) {

          var idx = signals.length-x;

          signal = signals[x].toString();

          signal = signal.split(".");

          signalIdCfg = signal[1].toString()+ "." + signal[2].toString()+ "." + signal[3].toString();

          // data
          for (var d=0;d<data.length;d++) {

            if ((signalIdCfg) == (data[d].id)) {

              // times
              for (var t=0;t<data[d]["times"].length;t++) {

                if ((markerTime >= data[d]["times"][t]) && (markerTime < data[d]["times"][t+1])) {

                  // najeli jsme kursorem na re�ln� data
                  if (markerTime == data[d]["times"][t]) {
                    value = data[d]["vals"][t];
                  }
                  // najeli jsme kursorem mezi re�ln� data - prolo��me regres� pro typ number, pro multitext zobraz�me hodnotu p�ede�l�ch dat
                  else {
                    if (((markerTime - data[d]["times"][t]) <= regresInterval) || ((data[d]["times"][t+1] - markerTime) <= regresInterval)) {

                      if (signal[0] == "n") {
                        a = (data[d]["vals"][t+1]-data[d]["vals"][t])/(data[d]["times"][t+1]-data[d]["times"][t]);
                      }
                      else if (signal[0] == "s") {
                        a = 0;
                      };
                      value = a*(markerTime-data[d]["times"][t]) + data[d]["vals"][t];
                    }
                    else {
                      frontCanvas.clearRect(posX+iWidth-fieldRightAdjust-fieldValWidth+180,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-(idx-1)*14-14,95,14);
                      frontCanvas.fillStyle = colorBackFields;
                      frontCanvas.fillRect(posX+iWidth-fieldRightAdjust-fieldValWidth+180,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-(idx-1)*14-14.5,95.5,14.5);

                      frontCanvas.fillStyle = signal[5];
                      frontCanvas.font = fontLegend;
                      frontCanvas.fillText("???",posX+iWidth-fieldRightAdjust-fieldValWidth+230,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-(idx-1)*14-4);
                      break;
                    };
                  };

                  // typ ��slo
                  if (signal[0] == "n") {

                    for (var m=1;m<=MAX_CLICKMAPS;m++) {
                      if (clickMaps[m]["id"] == signalIdCfg) {
                        if (clickMaps[m]["visibility"] == "true") {
                          value = value - clickMaps[m]["offset"][0];
                        }
                        else {
                          value = undefined;
                        };
                      };
                    };

                    if (Math.abs(clickMaps[0]["offset"][0] - markerTime) <= 5) {
                      value = 0;
                    };

                    // z�sk�n� numerick� hodnoty (typ string) s maskou
                    if (value != undefined) {
                      signalStrVal = value.toFixed(signal[4]);
                    }
                    else {
                      signalStrVal = "- - -";
                    };

                    frontCanvas.font = fontVals;
                    xPos = posX+iWidth-fieldRightAdjust-fieldValWidth+230;
                  };

                  // typ multitext
                  if (signal[0] == "s") {
                    signalTextList = signal[7];

                    for (var m=1;m<=MAX_CLICKMAPS;m++) {
                      if (clickMaps[m]["id"] == signalIdCfg) {
                        if (clickMaps[m]["visibility"] == "true") {
                          // z�sk�n� p��slu�n�ho textu z multitextu
                          for (var m=1;m<=MAX_MULTITEXTS;m++) {
                            if (multitexts[m]["name"] == signal[7]) {
                              if (((value) <= multitexts[m]["strings"].length) && ((multitexts[m]["strings"][value]) != undefined)) {
                                signalStrVal = getLangString((multitexts[m]["strings"][value]),lang);
                              }
                              else {
                                signalStrVal = "undefined";
                              };
                            };
                          };
                        }
                        else {
                          signalStrVal = "- - -";
                        };
                      };
                    };

                    frontCanvas.font = fontLegend;
                    xPos = posX+iWidth-fieldRightAdjust-fieldValWidth+180;
                  };

                  frontCanvas.clearRect(posX+iWidth-fieldRightAdjust-fieldValWidth+180,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-(idx-1)*14-14,95,14);
                  frontCanvas.fillStyle = colorBackFields;
                  frontCanvas.fillRect(posX+iWidth-fieldRightAdjust-fieldValWidth+180,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-(idx-1)*14-14.5,95.5,14.5);

                  frontCanvas.fillStyle = signal[5];
                  frontCanvas.fillText(signalStrVal,xPos,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-(idx-1)*14-4);
                  break;
                };
              };
            };
          };
        };
      };
    };

    function redrawChart(view,beginTime,markerTime,timeAxisIdx) {
    var viewInfo = new Array(),
        fieldsCnt = 0,
        fieldSumRatio = 0,
        koefFieldHeight = 0,
        FieldPosY = 0,
        stepHorzGrid = 0,
        stepVertGrid = 0,
        realStep = 0,
        fieldSigHeight = 0,
        chartHeightLoc = 0;

      view = (view == 0) ? 1 : view;

      // fields
      viewInfo = getViewInfo(view);
      fieldSumRatio = viewInfo[0];
      fieldsCnt = viewInfo[1];

      chartHeightLoc = chartHeight - chartHeight%fieldSumRatio;

      // vy�i�t�n� plochy grafu
      signalCanvas.clearRect(posX+1,posY+fieldBottomAdjust,chartWidth+fieldLeftAdjust,chartHeightLoc);
      backCanvas.clearRect(posX+1,posY+fieldBottomAdjust,chartWidth+fieldLeftAdjust,chartHeightLoc);

      if (fieldSumRatio != 0) { //ochrana proti d�leni nulou
        koefFieldHeight = (chartHeightLoc-fieldBrake*(fieldsCnt-1))/fieldSumRatio;
      };

      for (var field=1;field<=fieldsCnt;field++) {
        FieldPosY = 0;
        for (var j=1;j<field;j++) {
         FieldPosY += (views[view]["field_ratio"][j]*koefFieldHeight)+fieldBrake;
        };

        fieldSigHeight = views[view]["field_ratio"][field]*koefFieldHeight;

        // fields
        backCanvas.fillStyle = colorBackFields;
        backCanvas.fillRect(posX+fieldLeftAdjust,posY+fieldTopAdjust+FieldPosY,chartWidth,fieldSigHeight);

        // y-osa
        fieldRange = views[view]["field_range"][field];
        realStep = (fieldRange/6);

        for (var r=12;r>=0;r--) {
          if (stepGridY[r] > realStep) {
            stepVertGrid = stepGridY[r];
          };
        };

        lineCnt = Math.trunc(fieldRange/stepVertGrid);

        for (var k=0;k<=lineCnt;k++) {
          numLength = ((k*stepVertGrid).toString()).length*6+5;

          if (fieldRange != 0) { //ochrana p�ed d�len�m nulou

            if ((fieldRange != k*stepVertGrid)) { // nevykreslovat horn� limit - m��ku,bod ani ��slo

              // zna�ky - body
              frontCanvas.strokeStyle = BLACK;
              frontCanvas.setLineDash([0,0]);
              frontCanvas.lineWidth = 1;

              frontCanvas.beginPath();
                frontCanvas.moveTo(posX+fieldLeftAdjust-3,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-k*stepVertGrid*(fieldSigHeight/fieldRange));
                frontCanvas.lineTo(posX+fieldLeftAdjust,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-k*stepVertGrid*(fieldSigHeight/fieldRange));
                frontCanvas.stroke();
              frontCanvas.closePath();

              if (k != 0) {
                // m��ka
                backCanvas.strokeStyle = colorGrid;
                backCanvas.setLineDash([15,5]);
                backCanvas.lineWidth = 1;

                backCanvas.beginPath();
                  backCanvas.moveTo(posX+fieldLeftAdjust+0.5,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-k*stepVertGrid*(fieldSigHeight/fieldRange));
                  backCanvas.lineTo(posX+fieldLeftAdjust+chartWidth+0.5,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-k*stepVertGrid*(fieldSigHeight/fieldRange));
                  backCanvas.stroke();
                backCanvas.closePath();
              };

              // zna�ky - ��sla
              frontCanvas.fillStyle = BLACK;
              frontCanvas.font = fontAxis;
              frontCanvas.fillText(k*stepVertGrid,posX+fieldLeftAdjust-numLength,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-k*stepVertGrid*(fieldSigHeight/fieldRange)-2);
            };
          };
        };

        var img = document.getElementById("signal_visible"),
            signals = new Array(),
            signal = new Array(),
            mask = "",
            signalStrVal = "",
            signalIdCfg = "",
            signalIdData = "",
            dataLastX = 0,
            dataLastY = 0;

        signals = views[view]["signals"][field];

        // rozbor parametr� jednotliv�ch sign�l�
        for (var x=0;x<signals.length;x++) {

          var idx = signals.length-x;

          signal = signals[x].toString();

          signal = signal.split(".");

          signalIdCfg = signal[1].toString()+ "." + signal[2].toString()+ "." + signal[3].toString();

          signalCanvas.fillStyle = signal[5];

          for (var i=1;i<=MAX_CLICKMAPS;i++) {
            if (clickMaps[i]["id"] == signalIdCfg) {
              if (clickMaps[i]["visibility"] == "true") {
                // vykreslen� pr�b�h�
                for (var d=0;d<data.length;d++) {

                  if ((signalIdCfg) == (data[d].id)) {

                    signalCanvas.strokeStyle = signal[5];
                    signalCanvas.setLineDash([0,0]);
                    signalCanvas.lineWidth = 1;

                    for (var v=0;v<data[d]["vals"].length;v++) {
                      if (timeAxisLength[timeAxisIdx] != 0) { //ochrana p�ed d�len�m nulou
                        dataX = fieldLeftAdjust + ((data[d]["times"][v] - beginTime)/3600)*(chartWidth/timeAxisLength[timeAxisIdx]);
                      };

                      dataY = posY+fieldTopAdjust+FieldPosY+fieldSigHeight-data[d]["vals"][v]*(fieldSigHeight/fieldRange);

                      if (v == 0) {
                        dataLastX = dataX;
                        dataLastY = dataY;
                      };

                      signalCanvas.beginPath();

                        if ((dataX > clickMaps[0]["coords"][0]) && (dataX < clickMaps[0]["coords"][2])) {

                          if (data[d]["vals"][v]*(fieldSigHeight/fieldRange) > fieldSigHeight) {
                            signalCanvas.fillStyle = signal[5];
                            signalCanvas.fill();
                          };

                          signalCanvas.moveTo(dataLastX,dataLastY);
                          signalCanvas.lineTo(dataX,dataY);
                          signalCanvas.stroke();
                        };

                      signalCanvas.closePath();

                      dataLastX = dataX;
                      dataLastY = dataY;

                    };
                  };
                };
              };
            };
          };
        };
      };

      // horizont�ln� m��ka
      stepHorzGrid = stepGridTime[timeAxisIdx]/60;
      lineCnt = Math.trunc(timeAxisLength[timeAxisIdx]/stepHorzGrid);

      for (var k=0;k<=lineCnt;k++) {
        if (timeAxisLength[timeAxisIdx] != 0) { //ochrana p�ed d�len�m nulou

          // m��ka
          if ((k != 0) && (timeAxisLength[timeAxisIdx] != k*stepHorzGrid)) {  // nevykreslovat m��ku pro doln� a horn� limit
            backCanvas.strokeStyle = colorGrid;
            backCanvas.setLineDash([15,5]);
            backCanvas.lineWidth = 1;

            backCanvas.beginPath();
              backCanvas.moveTo(posX+fieldLeftAdjust+k*stepHorzGrid*(chartWidth/timeAxisLength[timeAxisIdx]),posY+fieldTopAdjust);
              backCanvas.lineTo(posX+fieldLeftAdjust+k*stepHorzGrid*(chartWidth/timeAxisLength[timeAxisIdx]),posY+iHeight-fieldBottomAdjust);
              backCanvas.stroke();
            backCanvas.closePath();
          };
        };
      };
    };

    function redrawTimeAxis(view,lang) {
    var date,
        time,
        viewInfo = new Array(),
        fieldsCnt = 0,
        fieldSumRatio = 0,
        chartHeightLoc;

      //fields
      viewInfo = getViewInfo(view);
      fieldSumRatio = viewInfo[0];
      fieldsCnt = viewInfo[1];

      chartHeightLoc = chartHeight - chartHeight%fieldSumRatio;

      // vy�i�t�n� plochy �asov� osy
      frontCanvas.clearRect(posX+1,posY+fieldTopAdjust+chartHeightLoc,fieldLeftAdjust+chartWidth+fieldBreakVals+0.5,25.5);
      frontCanvas.fillStyle = colorView;
      frontCanvas.fillRect(posX+1,posY+fieldTopAdjust+chartHeightLoc,fieldLeftAdjust+chartWidth+fieldBreakVals+0.5,25.5);

      // �asov� osa
      stepHorzGrid = stepGridTime[timeAxisIdx]/60;
      lineCnt = Math.trunc(timeAxisLength[timeAxisIdx]/stepHorzGrid);

      for (var k=0;k<=lineCnt;k++) {
        if (timeAxisLength[timeAxisIdx] != 0) { //ochrana p�ed d�len�m nulou

          // zna�ky - body
          frontCanvas.strokeStyle = BLACK;
          frontCanvas.setLineDash([0,0]);
          frontCanvas.lineWidth = 1;

          frontCanvas.beginPath();
            frontCanvas.moveTo(posX+fieldLeftAdjust+k*stepHorzGrid*(chartWidth/timeAxisLength[timeAxisIdx]),posY+iHeight-fieldBottomAdjust);
            frontCanvas.lineTo(posX+fieldLeftAdjust+k*stepHorzGrid*(chartWidth/timeAxisLength[timeAxisIdx]),posY+iHeight-fieldBottomAdjust+3);
            frontCanvas.stroke();
          frontCanvas.closePath();

          // zna�ky - ��sla
          frontCanvas.fillStyle = BLACK;
          frontCanvas.font = fontAxis;

          datetime = (getFormatedDateTime(beginTime+k*stepHorzGrid*3600+utcBias,lang));

          date = datetime.slice(datetime.length-19,datetime.length-14);
          time = datetime.slice(datetime.length-8,datetime.length-3);

          if ((stepGridTime[timeAxisIdx]) >= 1440) {
            frontCanvas.fillText(time,posX+fieldLeftAdjust+k*stepHorzGrid*(chartWidth/timeAxisLength[timeAxisIdx])-time.length*5/2,posY+iHeight-fieldBottomAdjust+13);
            frontCanvas.fillText(date,posX+fieldLeftAdjust+k*stepHorzGrid*(chartWidth/timeAxisLength[timeAxisIdx])-date.length*5/2,posY+iHeight-fieldBottomAdjust+23);
          }
          else {
            frontCanvas.fillText(time,posX+fieldLeftAdjust+k*stepHorzGrid*(chartWidth/timeAxisLength[timeAxisIdx])-time.length*5/2,posY+iHeight-fieldBottomAdjust+13);
          };
        };
      };
    };

    function redrawBeginTime(beginTime,lang) {

      frontCanvas.clearRect(posX+fieldLeftAdjust,posY+iHeight-fieldBottomAdjust+poleBegtimeOdsazY,fieldValWidth,16);

      frontCanvas.strokeStyle = colorFrames;
      frontCanvas.strokeRect(posX+fieldLeftAdjust,posY+iHeight-fieldBottomAdjust+poleBegtimeOdsazY,fieldValWidth,16);

      frontCanvas.fillStyle = BLACK;
      frontCanvas.font = fontTitle;
      frontCanvas.fillText(getFormatedDateTime(beginTime+utcBias,lang),posX+fieldLeftAdjust+5,posY+iHeight-fieldBottomAdjust+poleBegtimeOdsazY+12);
    };

    function redrawTitle(view,lang) {

      frontCanvas.clearRect(posX+fieldLeftAdjust,posY+fieldTopAdjust-24,350.5,23.5);

      frontCanvas.fillStyle = colorView;
      frontCanvas.fillRect(posX+fieldLeftAdjust,posY+fieldTopAdjust-24,350.5,23.5);

      frontCanvas.fillStyle = colorTitle;
      frontCanvas.font = fontTitle;
      frontCanvas.fillText(getLangString(titles[view],lang),posX+fieldLeftAdjust,posY+fieldTopAdjust-10);
    };

    function redrawLegend(view,lang) {
    var viewInfo = new Array(),
        fieldsCnt = 0,
        fieldSumRatio = 0,
        koefFieldHeight = 0,
        FieldPosY = 0,
        fieldSigHeight = 0,
        sigGlobalIdx = 0,
        chartHeightLoc,

        view = (view == 0) ? 1 : view;

      //fields
      viewInfo = getViewInfo(view);
      fieldSumRatio = viewInfo[0];
      fieldsCnt = viewInfo[1];

      chartHeightLoc = chartHeight - chartHeight%fieldSumRatio;

      // vy�i�t�n� plochy legendy
      frontCanvas.clearRect(posX+fieldLeftAdjust+chartWidth,posY+fieldTopAdjust,fieldValWidth+fieldBreakVals-1,chartHeight);

      // legenda
      frontCanvas.fillStyle = colorView;
      frontCanvas.fillRect(posX+fieldLeftAdjust+chartWidth,posY+fieldTopAdjust,fieldValWidth+fieldBreakVals-1,chartHeightLoc);

      if (fieldSumRatio != 0) { //ochrana proti d�leni nulou
        koefFieldHeight = (chartHeightLoc-fieldBrake*(fieldsCnt-1))/fieldSumRatio;
      };

      sigGlobalIdx = 0;

      for (var field=1;field<=fieldsCnt;field++) {
        FieldPosY = 0;

        for (var j=1;j<field;j++) {
         FieldPosY += (views[view]["field_ratio"][j]*koefFieldHeight)+fieldBrake;
        };

        fieldSigHeight = views[view]["field_ratio"][field]*koefFieldHeight;

        // legenda
        frontCanvas.fillStyle = colorBackFields;
        frontCanvas.fillRect(posX+iWidth-fieldRightAdjust-fieldValWidth,posY+fieldTopAdjust+FieldPosY,fieldValWidth,fieldSigHeight);

        var img = document.getElementById("signal_visible"),
            signals = new Array(),
            signal = new Array(),
            mask = "",
            signalStrVal = "",
            signalIdCfg = "";
            signalIdData = "";

        signals = views[view]["signals"][field];

        // rozbor parametr� jednotliv�ch sign�l�
        for (var x=0;x<signals.length;x++) {

          var idx = signals.length-x;

          sigGlobalIdx += 1;

          signal = signals[x].toString();

          signal = signal.split(".");

          signalIdCfg = signal[1].toString()+ "." + signal[2].toString()+ "." + signal[3].toString();

          frontCanvas.fillStyle = signal[5];
          frontCanvas.font = fontLegend;
          signalLegend = getLangString(signal[6],lang);
          sX = posX+iWidth-fieldRightAdjust-fieldValWidth-13;
          sY = posY+fieldTopAdjust+FieldPosY+fieldSigHeight-(idx-1)*14-14;
          frontCanvas.fillText(signalLegend,posX+iWidth-fieldRightAdjust-fieldValWidth+5,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-(idx-1)*14-4);

          // omezeni indexu
          if (sigGlobalIdx <= MAX_CLICKMAPS) {
            clickMaps[sigGlobalIdx]["id"] = signalIdCfg;
            clickMaps[sigGlobalIdx]["coords"][0] = sX;
            clickMaps[sigGlobalIdx]["coords"][1] = sY;
            clickMaps[sigGlobalIdx]["coords"][2] = sX+11;
            clickMaps[sigGlobalIdx]["coords"][3] = sY+11;
            if (clickMaps[sigGlobalIdx]["visibility"] == "true") {
              frontCanvas.drawImage(img,0,0,11,11,sX,sY,11,11);
            }
            else {
              frontCanvas.drawImage(img,11,0,11,11,sX,sY,11,11);
            };
          };

          redrawValues(view,markerTime,lang);

          //jednotky
          if (signal[0] == "n") {  // typ ��slo

            signalUnits = getLangString(signal[7],lang);
            frontCanvas.fillStyle = signal[5];
            frontCanvas.font = fontLegend;
            frontCanvas.fillText(signalUnits,posX+iWidth-fieldRightAdjust-fieldValWidth+275,posY+fieldTopAdjust+FieldPosY+fieldSigHeight-(idx-1)*14-4);
          };
        };
      };
    };

    function redrawMarkerTime(markerTime,lang) {
    var sign;

      // vy�i�t�n� plochy marker time
      frontCanvas.clearRect(posX+iWidth-fieldRightAdjust-fieldValWidth,posY+iHeight-fieldBottomAdjust+poleBegtimeOdsazY,fieldValWidth,16);

      frontCanvas.fillStyle = colorBackTime;
      frontCanvas.fillRect(posX+iWidth-fieldRightAdjust-fieldValWidth,posY+iHeight-fieldBottomAdjust+poleBegtimeOdsazY,fieldValWidth,16);

      frontCanvas.fillStyle = colorTime;
      frontCanvas.font = fontTitle;

      if (reset == true) {
        sign = (markerTime >= clickMaps[0]["offset"][0]) ? " + " : " - ";

        frontCanvas.fillText(sign + getFormatedTime(Math.abs(markerTime-clickMaps[0]["offset"][0])),posX+iWidth-fieldRightAdjust-fieldValWidth+5,posY+iHeight-fieldBottomAdjust+poleBegtimeOdsazY+12);
      }
      else {
        frontCanvas.fillText(getFormatedDateTime(markerTime+utcBias,lang),posX+iWidth-fieldRightAdjust-fieldValWidth+5,posY+iHeight-fieldBottomAdjust+poleBegtimeOdsazY+12);
      };

    };

    function separate(string,separator,idx) {
    var items = new Array();
        item = "";

      if (idx == -1) {
        items = string.split(separator);
        return items;
      }
      else {

        items = string.split(separator);
        item = items[idx];
        return item;
      };
    };

    // z�sk�n� spr�vn�ho textu pro po�adovanou jazykovou mutaci
    function getLangString(string,lang){
    var items = "";
      if (string != undefined) {
        items = string.split("$");
        return items[lang];
      }
      else {
        return "undef. lang";
      };
    };

   // tla��tka menu

   function backShift() {
     view = $('#group').val();
     lang = getLangIdx($('#lang').val());
     beginTime -= (timeAxisLength[timeAxisIdx]*3600)/2;
     redrawScreen();
     redrawTitle(view,lang)
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     redrawTimeAxis(view,lang);
     drawCursor(markerTime);
     redrawBeginTime(beginTime,lang);
   };

   function fwdShift() {
     view = $('#group').val();
     lang = getLangIdx($('#lang').val());
     beginTime += (timeAxisLength[timeAxisIdx]*3600)/2;
     redrawScreen();
     redrawTitle(view,lang)
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     redrawTimeAxis(view,lang);
     drawCursor(markerTime);
     redrawBeginTime(beginTime,lang);
   };

   function narrow() {
     view = $('#group').val();
     lang = getLangIdx($('#lang').val());
     timeAxisIdx = (timeAxisIdx >= 9) ? 9 : timeAxisIdx+1;
     redrawScreen();
     redrawTitle(view,lang)
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     redrawTimeAxis(view,lang);
     drawCursor(markerTime);
     redrawBeginTime(beginTime,lang);
   };

   function extend() {
     view = $('#group').val();
     lang = getLangIdx($('#lang').val());
     timeAxisIdx = (timeAxisIdx <= 0) ? 0 : timeAxisIdx-1;
     redrawScreen();
     redrawTitle(view,lang)
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     redrawTimeAxis(view,lang);
     drawCursor(markerTime);
     redrawBeginTime(beginTime,lang);
   };

   function backDay() {
     view = $('#group').val();
     lang = getLangIdx($('#lang').val());
     beginTime -= 86400;
     redrawScreen();
     redrawTitle(view,lang)
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     redrawTimeAxis(view,lang);
     drawCursor(markerTime);
     redrawBeginTime(beginTime,lang);
   };

   function fwdDay() {
     view = $('#group').val();
     lang = getLangIdx($('#lang').val());
     beginTime += 86400;
     redrawScreen();
     redrawTitle(view,lang)
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     redrawTimeAxis(view,lang);
     drawCursor(markerTime);
     redrawBeginTime(beginTime,lang);
   };

   function zoomSignal(val) {
     switch (val) {
     case "zoom":
       zoom = true;
       $('#zoom').attr('value',"ZOOM");
     break;
     case "ZOOM":
       zoom = false;
       eraseActiveCanvas(0);
       $('#zoom').attr('value',"zoom");
     break;
     };
   };

   function resetValue(val) {
     switch (val) {
     case ">0<":
       for (var d=0;d<data.length;d++) {
         for (var t=0;t<data[d]["times"].length;t++) {
           if (Math.abs(data[d]["times"][t] - markerTime) <= 5) {
             for (var m=1;m<=MAX_CLICKMAPS;m++) {
               if (clickMaps[m]["id"] == data[d]["id"]) {
               clickMaps[m]["offset"][0] = data[d]["vals"][t];
               reset = true;
               clickMaps[0]["offset"][0] = markerTime;
               lang = getLangIdx($('#lang').val());
               redrawMarkerTime(markerTime,lang);
               view = $('#group').val();
               lang = getLangIdx($('#lang').val());
               redrawValues(view,markerTime,lang);
               $('#reset').attr('value',">>0<<");
               };
             };
           }
           else {

           };
         };
       };
     break;
     case ">>0<<":
       reset = false;
       for (var m=0;m<MAX_CLICKMAPS;m++) {
         clickMaps[m]["offset"][0] = 0;
       };
       redrawMarkerTime(markerTime,lang)
       $('#reset').attr('value',">0<");
       view = $('#group').val();
       lang = getLangIdx(lang);
       redrawValues(view,markerTime,lang);
     break;
     };
   };

   function changeGroup(view) {
     for (m=1;m<=MAX_CLICKMAPS;m++) {
      clickMaps[m]["visibility"] = "true";
     };

     redrawScreen();
     view = $('#group').val();
     lang = getLangIdx(lang);
     redrawScreen();
     redrawTitle(view,lang);
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     redrawValues(view,markerTime,lang);
     redrawLegend(view,lang);
     redrawTimeAxis(view,lang);
     drawCursor(markerTime);
     redrawBeginTime(beginTime,lang);
     redrawMarkerTime(markerTime,lang);
   };

   function reload() {
     redrawScreen();

     view = $('#group').val();
     lang = getLangIdx(lang);
     redrawTitle(view,lang);
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     redrawValues(view,markerTime,lang);
     redrawLegend(view,lang);
     redrawBeginTime(beginTime,lang);
     redrawMarkerTime(markerTime,lang);
   };

   function changeLang(view,lang) {
     lang = getLangIdx(lang);

     switch (lang) {
     case 0:
       if (lang in enbLangs) {
         redrawLegend(view,1);
         $('#lang').attr('value',"lang:CZ");
       }
       else {
       };
     break;
     case 1:
       redrawLegend(view,2);
       $('#lang').attr('value',"lang:DE");
     break;
     case 2:
       redrawLegend(view,3);
       $('#lang').attr('value',"lang:PL");
     break;
     case 3:
       redrawLegend(view,0);
       $('#lang').attr('value',"lang:EN");
     break;
     };

     view = $('#group').val();
     lang = getLangIdx($('#lang').val());
     redrawTitle(view,lang);
     redrawBeginTime(beginTime,lang);
     redrawMarkerTime(markerTime,lang);
   };

   function getLangIdx() {
     lang = $('#lang').val();
     switch (lang) {
     case "lang:EN":
       return 0;
     break;
     case "lang:CZ":
       return 1;
     break;
     case "lang:DE":
       return 2;
     break;
     case "lang:PL":
       return 3;
     break;
     };
   };

   function changeZone(zone) {
     switch (zone) {
     case "zone:CET":
       utcBias += 3*3600;
       $('#zone').attr('value',"zone:MOSCOW");
     break;
     case "zone:MOSCOW":
       utcBias -= 4*3600;
       $('#zone').attr('value',"zone:UTC");
     break;
     case "zone:UTC":
       utcBias += 3600;
       $('#zone').attr('value',"zone:CET");
     break;

     };

     view = $('#group').val();
     lang = getLangIdx($('#lang').val());
     redrawScreen();
     redrawTitle(view,lang);
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     drawCursor(markerTime);
     redrawTimeAxis(view,lang);
     redrawBeginTime(beginTime,lang);
     redrawMarkerTime(markerTime,lang);
   };

   function goDateTime(dd,MM,yyyy) {
     $('#calendar').css('visibility','hidden');
     beginTime = parseInt((Date.UTC(yyyy,MM-1,dd,-1,0,0,0) - Date.UTC(2000,0,1,0,0,0,0))/1000,10);

     view = $('#group').val();
     lang = $('#lang').val();

     timeAxisIdx = 6;
     redrawChart(view,beginTime,markerTime,timeAxisIdx);
     drawCursor(markerTime);
     redrawTimeAxis(view,lang);
     redrawBeginTime(beginTime,lang);
     redrawMarkerTime(markerTime,lang);
   };

   function maxDays(mm,yyyy){
   var mDay;
   	 if((mm == 3) || (mm == 5) || (mm == 8) || (mm == 10)) {
   	 mDay = 30;
   	 }
     else {
       mDay = 31
    	 if(mm == 1) {
     	   if (yyyy/4 - parseInt(yyyy/4) != 0){
     		   mDay = 28
     		 }
    	   else {
     		   mDay = 29
    		 };
       };
     };
   return mDay;
   };

   function changeBg(id) {
   var selDD,
       selMM,
       selYYYY;

     if (eval(id).className != "c3") {
       selDD = document.getElementById(id).innerHTML;
       selMM = $('#month').prop('selectedIndex')+1;
       selYYYY = $('#year').val();
       eval(id).style.backgroundColor = "yellow";
       goDateTime(selDD,selMM,selYYYY);
     };
   };

   function calendar() {
   var now = new Date,
       dd = now.getDate(),
       mm = now.getMonth(),
       dow = now.getDay(),
       yyyy = now.getFullYear(),
       arrY = new Array(),
       text = "";

     for (ii=0;ii<=4;ii++) {
       arrY[ii] = yyyy - 4 + ii;
     };

     if ($('#calendar').css('visibility') == "visible") {
       $('#calendar').css('visibility','hidden');
       return;
     };

     $('#calendar').css('visibility','hidden');

     var lang = getLangIdx($('#lang').val());

     switch (lang) {
     case 0:
        arrM = monthsEN;
        arrD = daysEN1;
        break;
      case 1:
        arrM = monthsCZ;
        arrD = daysCZ1;
        break;
      case 2:
        arrM = monthsDE;
        arrD = daysDE1;
        break;
      };

     text += "<form name=calForm>"
     text += "<table style=\"border-style: groove; border-width: 1px;\">"

     // m�s�c
     text += "<tr><td>"
     text += "<table width=100% style=\"border-style: none; border-width: 1px;\"><tr>"
     text += "<td align=left>"
     text += "<select id=\'month\' name=selMonth onChange='changeCal()'>"
     for (ii=0;ii<=11;ii++) {
       if (ii==mm) {
         text += "<option value= " + ii + " Selected>" + arrM[ii] + "</option>"
    	   }
    	   else {
    	     text += "<option value= " + ii + ">" + arrM[ii] + "</option>"
    	   };
       };
     text += "</select>"
     text += "</td>"

     // rok
     text += "<td align=right>"
     text += "<select id=\'year\' name=selYear onChange='changeCal()'>"

     for (ii=4;ii>=0;ii--) {
       if (ii==4) {
         text += "<option value= " + arrY[ii] + " Selected>" + arrY[ii] + "</option>"
      	 }
      	 else {
      	   text += "<option value= " + arrY[ii] + ">" + arrY[ii] + "</option>"
      	 };
       };

     text += "</select>"
     text += "</td>"
     text += "</tr></table>"
     text += "</td></tr>"

     // n�zvy dn�
     text += "<tr><td>"
     text += "<table style=\"border-style: groove; border-width: 1px;\">"
     text += "<tr>"
     for (ii=0;ii<=6;ii++) {
       text += "<td align=center;><span style=\"color: black; width: 30px; height: 16px; font: bold 13px Arial;\">" + arrD[ii] + "</span></td>"
     };
     text += "</tr>"

     // dny
     aa = 0;
     for (kk=0;kk<=5;kk++) {
       text += "<tr>"
       for (ii=0;ii<=6;ii++) {
         text += "<td align=center><span id=sp" + aa + " onClick='changeBg(this.id)'>1</span></td>"
    	   aa += 1;
       };
       text += "</tr>"
     };
     text += "</table>"
     text += "</td></tr>"
     text += "</table>"
     text += "</form>"
     $('#calendar').html(text);
     $('#calendar').css('visibility','visible');
     changeCal();
   };

   function changeCal() {
   var now = new Date,
       dd = now.getDate(),
       mm = now.getMonth(),
       dow = now.getDay(),
       yyyy = now.getFullYear(),
       currM = parseInt(document.calForm.selMonth.value),
       prevM;

     if (currM!=0) {
    	 prevM = currM - 1;
     }
     else {
       prevM = 11;
    	};

   var currY = parseInt(document.calForm.selYear.value),
       mmyyyy = new Date();

     mmyyyy.setFullYear(currY);
     mmyyyy.setMonth(currM);
     mmyyyy.setDate(1);
   var day1 = mmyyyy.getDay();
     if (day1 == 0) {
       day1 = 7;
     };
   var arrN = new Array(41);
   var aa;

     //p�ede�l� m�s�c
     for (ii=0;ii<day1;ii++) {
       arrN[ii] = maxDays((prevM),currY) - day1 + 1 + ii;
     };

     //aktu�ln� m�s�c
     aa = 1;
     for (ii=day1;ii<=day1+maxDays(currM,currY)-1;ii++){
    	 arrN[ii] = aa;
    	 aa += 1;
     };

     //n�sleduj�c� m�s�c
     aa = 1;
     for (ii=day1+maxDays(currM,currY);ii<=43;ii++) {
       arrN[ii] = aa;
    	 aa += 1;
     };

     for (ii=0;ii<=41;ii++) {
       eval("sp"+ii).style.backgroundColor = "#FFFFFF";
     };
   var dCount = 0
     for (ii=0;ii<=41;ii++) {
       if (((ii<7)&&(arrN[ii+1]>20))||((ii>27)&&(arrN[ii+1]<20))) {
    	   eval("sp"+ii).innerHTML = arrN[ii+1];
    	   eval("sp"+(ii)).className="c3";
    		 eval("sp"+(ii)).style.cursor="default";
    		 eval("sp"+(ii)).style.color="#b0b0b0";
    		 eval("sp"+(ii)).style.width="30px";
    		 eval("sp"+(ii)).style.height="16px";
    		 eval("sp"+(ii)).style.font="normal 12px Arial";
    		 eval("sp"+(ii)).style.backgroundColor="#F0F0F0";
    	 }
    	 else {
    	   eval("sp"+ii).innerHTML = arrN[ii+1];

    		 if (dCount==6) {
    		   eval("sp"+(ii)).className="c2";
    			 eval("sp"+(ii)).style.cursor="pointer";
    		 	 eval("sp"+(ii)).style.color="red";
    		 	 eval("sp"+(ii)).style.width="30px";
    		 	 eval("sp"+(ii)).style.height="16px";
    		 	 eval("sp"+(ii)).style.font="bold 13px Arial";
    		 	 eval("sp"+(ii)).style.backgroundColor="#F0F0F0";
    		 }
    		 else {
           eval("sp"+(ii)).className="c1";
    		 	 eval("sp"+(ii)).style.cursor="pointer";
    		 	 eval("sp"+(ii)).style.color="black";
    		 	 eval("sp"+(ii)).style.width="30px";
    		 	 eval("sp"+(ii)).style.height="16px";
    		 	 eval("sp"+(ii)).style.font="bold 13px Arial";
    		 	 eval("sp"+(ii)).style.backgroundColor="#F0F0F0";
    		 };

    		 // dnes
    		 if ((arrN[ii]==dd)&&(mm==currM)&&(yyyy==currY)) {
    		   eval("sp"+(ii-1)).style.backgroundColor="#90EE90";
    		 };
    	 };
    	 dCount += 1
    	 if (dCount>6) {
    	   dCount=0
    	 };
     };
   };

    </script>

    <title>Canvas drawing</title>
</head>
<body id="body" onLoad="" scroll="no" style="overflow: hidden;">

    <div id="menu">
        <input style="height: 22px; width: 45px;" type="button" value="<--" onClick="backShift()" />
        <input style="height: 22px; width: 45px;" type="button" value="-->" onClick="fwdShift()" />
        <input style="height: 22px; width: 45px;" type="button" value="-><-" onClick="narrow()" />
        <input style="height: 22px; width: 45px;" type="button" value="<->" onClick="extend()" />
        <input style="height: 22px; width: 50px;" type="button" value="<-day" onClick="backDay()" />
        <input style="height: 22px; width: 50px;" type="button" value="day->" onClick="fwdDay()" />
        <input id="zoom" style="height: 22px; width: 50px;" type="button" value="zoom" onClick="zoomSignal(value)" />
        <input style="height: 22px; width: 50px;" type="button" value="date" onClick="calendar();" />
        <input id="reset" style="height: 22px; width: 50px;" type="button" value=">0<" onClick="resetValue(value)" />

        <input style="position: absolute; left: 605px; height: 22px; width: 60px;" type="button" value="refresh" onClick="reload()" />
        <select id="group" style="position: absolute; left: 670px; height: 22px; width: 210px;" onChange="changeGroup(value)" tabindex="1" method="get">
            <option value="1">p�ehled</option>
            <option value="2">detail</option>
        </select>
        <input id="lang" style="position: absolute; left: 885px; height: 22px; width: 75px;" type="button" value="lang:EN" onClick="changeLang($('#group').val(),value)" />
        <input id="zone" style="text-align: left; position: absolute; left: 965px; height: 22px; width: 120px;" type="button" value="zone:CET" onClick="changeZone(value)" />
        <input style="position: absolute; left: 1090px; height: 22px; width: 50px;" type="button" value="mode" onClick="chartMode()" />
    </div>

    <div id="calendar" style="position: absolute; top: 32px; left: 365px; background-color: #F0F0F0; z-index: 10; visibility: hidden">
    </div>

    <div id="content">
        <canvas id="active_canvas" width="1920" height="1200" style="position: absolute; left:0px; top: 32px; z-index: 4;"></canvas>
        <canvas id="front_canvas" width="1920" height="1200" style="position: absolute; left:0px; top: 32px; z-index: 3;"></canvas>
        <canvas id="signal_canvas" width="1920" height="1200" style="position: absolute; left:0px; top: 32px; z-index: 2;"></canvas>
        <canvas id="back_canvas" width="1920" height="1200" style="position: absolute; left:0px; top: 32px; z-index: 1;"></canvas>
    </div>

    <div id="sources">
        <!-- graphicList -->
        <img id="status" style="display: none;" src="/img/status.png" />
        <!-- event icons -->
        <img id="close" style="display: none;" src="/img/close.png" />
        <img id="signal_visible" style="display: none;" src="/img/signal_visible.png" />
    </div>

    <script src="/js/jquery-latest.js"></script>
    <!--[if lt IE 9]>
      <script src="excanvas.js"></script>
    <![endif]-->
    <script src="/lib/pktime.js"></script>

</body>
</html>